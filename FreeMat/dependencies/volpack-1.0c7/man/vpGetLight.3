.\" Copyright (c) 1995-2008, Stanford University
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions are met:
.\"     * Redistributions of source code must retain the above copyright
.\"       notice, this list of conditions and the following disclaimer.
.\"     * Redistributions in binary form must reproduce the above copyright
.\"       notice, this list of conditions and the following disclaimer in the
.\"       documentation and/or other materials provided with the distribution.
.\"     * Neither the name of Stanford University nor the
.\"       names of its contributors may be used to endorse or promote products
.\"       derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY STANFORD UNIVERSITY ''AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED. IN NO EVENT SHALL STANFORD UNIVERSITY BE LIABLE FOR ANY
.\" DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
.\" ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
.\" SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\" 
.\" Author:
.\"    Phil Lacroute
.\"    Computer Systems Laboratory
.\"    Electrical Engineering Dept.
.\"    Stanford University
.\" 
.\" Macros
.\" .FS <type>  --  function start
.\"     <type> is return type of function
.\"     name and arguments follow on next line
.de FS
.PD 0v
.PP
\\$1
.HP 8
..
.\" .FA  --  function arguments
.\"     one argument declaration follows on next line
.de FA
.IP " " 4
..
.\" .FE  --  function end
.\"     end of function declaration
.de FE
.PD
..
.\" .DS  --  display start
.de DS
.IP " " 4
..
.\" .DE  --  display done
.de DE
.LP
..
.TH vpGetLight 3 "" VolPack
.SH NAME
vpGetLight \- get lighting properties
.SH SYNOPSIS
#include <volpack.h>
.sp
.FS vpResult
\fBvpGetLight(\fIvpc, light_num, property, n0_ptr, n1_ptr, n2_ptr\fB)\fR
.FA
vpContext *\fIvpc;\fR
.FA
int \fIlight_num;\fR
.FA
int \fIproperty;\fR
.FA
double *\fIn0_ptr,\fR *\fIn1_ptr,\fR *\fIn2_ptr;\fR
.FE
.SH ARGUMENTS
.IP \fIvpc\fR
VolPack context from \fBvpCreateContext.\fR
.IP \fIlight_num\fR
A constant specifying a particular light source (VP_LIGHT0, VP_LIGHT1, ...,
VP_LIGHT5).
.IP \fIproperty\fR
A constant specifying one lighting property (VP_COLOR or VP_DIRECTION).
.IP "\fIn0_ptr, n1_ptr, n2_ptr\fR"
Locations for storing the result: components of an RGB color (for
VP_COLOR) or a direction vector (for VP_DIRECTION).
.SH DESCRIPTION
\fBvpGetLight\fR is used to get the properties of a light source.
The arguments are exactly analogous to \fBvpSetLight\fR except that
the final three arguments are pointers to locations for storing the
lighting properties.
.SH ERRORS
The normal return value is VP_OK.  The following error return values
are possible:
.IP VPERROR_LIMIT_EXCEEDED
The light number is invalid or exceeds an implementation limit.
.IP VPERROR_BAD_OPTION
The \fIproperty\fR argument is invalid.
.SH SEE ALSO
VolPack(3), vpCreateContext(3), vpSetLight(3)
