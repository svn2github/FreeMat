.\" Copyright (c) 1995-2008, Stanford University
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions are met:
.\"     * Redistributions of source code must retain the above copyright
.\"       notice, this list of conditions and the following disclaimer.
.\"     * Redistributions in binary form must reproduce the above copyright
.\"       notice, this list of conditions and the following disclaimer in the
.\"       documentation and/or other materials provided with the distribution.
.\"     * Neither the name of Stanford University nor the
.\"       names of its contributors may be used to endorse or promote products
.\"       derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY STANFORD UNIVERSITY ''AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED. IN NO EVENT SHALL STANFORD UNIVERSITY BE LIABLE FOR ANY
.\" DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
.\" ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
.\" SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\" 
.\" Author:
.\"    Phil Lacroute
.\"    Computer Systems Laboratory
.\"    Electrical Engineering Dept.
.\"    Stanford University
.\"
.\" Macros
.\" .FS <type>  --  function start
.\"     <type> is return type of function
.\"     name and arguments follow on next line
.de FS
.PD 0v
.PP
\\$1
.HP 8
..
.\" .FA  --  function arguments
.\"     one argument declaration follows on next line
.de FA
.IP " " 4
..
.\" .FE  --  function end
.\"     end of function declaration
.de FE
.PD
..
.\" .DS  --  display start
.de DS
.IP " " 4
..
.\" .DE  --  display done
.de DE
.LP
..
.TH vpGetMaterial 3 "" VolPack
.SH NAME
vpGetMaterial \- get material properties
.SH SYNOPSIS
#include <volpack.h>
.sp
.FS vpResult
\fBvpGetMaterial(\fIvpc, material, property, surface_side, r_ptr,
g_ptr, b_ptr\fB)\fR
.FA
vpContext *\fIvpc;\fR
.FA
int \fImaterial;\fR
.FA
int \fIproperty;\fR
.FA
int \fIsurface_side;\fR
.FA
double *\fIr_ptr,\fR *\fIg_ptr,\fR *\fIb_ptr;\fR
.FE
.SH ARGUMENTS
.IP \fIvpc\fR
VolPack context from \fBvpCreateContext.\fR
.IP \fImaterial\fR
A constant specifying a particular material number (VP_MATERIAL0,
VP_MATERIAL1, ..., VP_MATERIAL5).
.IP \fIproperty\fR
A constant specifying one material property (VP_AMBIENT, VP_DIFFUSE,
VP_SPECULAR or VP_SHINYNESS).
.IP \fIsurface_side\fR
A constant specifying one side of the material surface (VP_EXTERIOR or
VP_INTERIOR).
.IP "\fIr_ptr, g_ptr, b_ptr\fR"
Locations to store the RGB components of the color associated with the
property.  For VP_SHINYNESS, \fIg_ptr\fR and \fIb_ptr\fR are not used.
.SH DESCRIPTION
\fBvpGetMaterial\fR is used to get the properties of a material type.
The arguments are exactly analogous to \fBvpSetMaterial\fR except that
the \fIsurface_side\fR argument may not be VP_BOTH_SIDES, and the final
three arguments are pointers to locations for storing the material
properties.
.SH ERRORS
The normal return value is VP_OK.  The following error return values
are possible:
.IP VPERROR_BAD_VALUE
The material number is invalid.
.IP VPERROR_BAD_OPTION
Either the \fIsurface_side\fR or \fIproperty\fR arguments are invalid.
.SH SEE ALSO
VolPack(3), vpCreateContext(3), vpSetMaterial(3)
