.\" Copyright (c) 1995-2008, Stanford University
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions are met:
.\"     * Redistributions of source code must retain the above copyright
.\"       notice, this list of conditions and the following disclaimer.
.\"     * Redistributions in binary form must reproduce the above copyright
.\"       notice, this list of conditions and the following disclaimer in the
.\"       documentation and/or other materials provided with the distribution.
.\"     * Neither the name of Stanford University nor the
.\"       names of its contributors may be used to endorse or promote products
.\"       derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY STANFORD UNIVERSITY ''AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED. IN NO EVENT SHALL STANFORD UNIVERSITY BE LIABLE FOR ANY
.\" DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
.\" ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
.\" SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\" 
.\" Author:
.\"    Phil Lacroute
.\"    Computer Systems Laboratory
.\"    Electrical Engineering Dept.
.\"    Stanford University
.\" 
.\" Macros
.\" .FS <type>  --  function start
.\"     <type> is return type of function
.\"     name and arguments follow on next line
.de FS
.PD 0v
.PP
\\$1
.HP 8
..
.\" .FA  --  function arguments
.\"     one argument declaration follows on next line
.de FA
.IP " " 4
..
.\" .FE  --  function end
.\"     end of function declaration
.de FE
.PD
..
.\" .DS  --  display start
.de DS
.IP " " 4
..
.\" .DE  --  display done
.de DE
.LP
..
.TH vpSetMaterial 3 "" VolPack
.SH NAME
vpSetMaterial \- set material properties
.SH SYNOPSIS
#include <volpack.h>
.sp
.FS vpResult
\fBvpSetMaterial(\fIvpc, material, property, surface_side, r, g, b\fB)\fR
.FA
vpContext *\fIvpc;\fR
.FA
int \fImaterial;\fR
.FA
int \fIproperty;\fR
.FA
int \fIsurface_side;\fR
.FA
double \fIr, g, b;\fR
.FE
.SH ARGUMENTS
.IP \fIvpc\fR
VolPack context from \fBvpCreateContext.\fR
.IP \fImaterial\fR
A constant specifying a particular material number (VP_MATERIAL0,
VP_MATERIAL1, ..., VP_MATERIAL5).
.IP \fIproperty\fR
A constant specifying one material property (VP_AMBIENT, VP_DIFFUSE,
VP_SPECULAR or VP_SHINYNESS).
.IP \fIsurface_side\fR
A constant specifying which side of the material surface the
properties apply to (VP_EXTERIOR, VP_INTERIOR or VP_BOTH_SIDES).
.IP "\fIr, g, b\fR"
RGB components of the color associated with the property.  For
VP_SHINYNESS, \fIg\fR and \fIb\fR are not used.
.SH DESCRIPTION
\fBvpSetMaterial\fR is used to set the properties of a material type.
Each voxel may be composed of a mixture of several different material
types, as described in vpSetLookupShader(3).  Each material type has its
own color and light reflection properties.  The properties are used as
parameters to the Phong shading equation for computing the color of
the material given a set of light sources and a viewing direction (see
vpShadeTable(3)).
.PP
To initialize the material parameters, call \fBvpSetMaterial\fR for
each property of each material type to be used.  The total number of
materials is specified as an argument to \fBvpSetLookupShader\fR.
The first material is specified by the constant VP_MATERIAL0, the
second is VP_MATERIAL1, and so on.
.PP
The VP_AMBIENT property specifies the RGB ambient light coefficients of the
material.  This term represents the intensity of background light
reflected by the material.  Each of the RGB components specifies the
coefficient for the corresponding light basis function.  The values of
the coefficients should be in the range 0.0-1.0.  Default: 0.1
.PP
The VP_DIFFUSE property specifies the RGB diffuse light coefficients of
the material.  This term represents the fraction of incident light
intensity that is reflected diffusely (with a dull, matte appearance).
The values of the coefficients should be in the range 0.0-1.0.
Default: 0.4
.PP
The VP_SPECULAR property specifies the RGB specular light coefficients of
the material.  This term represents the fraction of incident light
intensity that is reflected specularly (with a shiny, mirror-like
appearance).  The values of the coefficients should be in the range
0.0-1.0.  Default: 0.5
.PP
The VP_SHINYNESS property specifies a single exponent that modifies
the spread of specular highlights.  The higher the number, the smaller
and more intense the specular highlights.  The exponent is specified
with the \fIr\fR argument and can have any value; the generally-useful
range is 1.0 to 100.0.  The \fIg\fR and \fIb\fR arguments are ignored
for this property.  Default: 10.0
.PP
The \fIsurface_side\fR argument specifies which side of the material
surface the properties apply to.  By default, the "interior" side of a
voxel is the side in the direction of the surface normal.  During
rendering, if the normal points closer to the direction of the viewer
than the opposite of the normal then the viewer is looking at the
exterior side of the voxel rather than the interior.  Different
material parameters can be applied to the two surface sides by calling
\fBvpSetMaterial\fR separately for each side.  The option
VP_BOTH_SIDES allows the same property to be set for both sides with
only one function call.  It is possible to reverse the definition of
interior and exterior sides by calling \fBvpEnable\fR with the
VP_REVERSE_SURFACE_SIDES option.
.PP
Voxels are shaded using the following equation:
.DS
I = A + L * (D * n_dot_l + S * pow(n_dot_h, E))
.sp
.ta 12
I	intensity for one color channel
.br
A	ambient intensity coefficient
.br
D	diffuse reflection coefficient
.br
S	specular reflection coefficient
.br
E	shinyness
.br
L	light intensity
.br
n_dot_l	dot product of normal and light vectors
.br
n_dot_h	dot product of normal and highlight vectors
.DE
This equation is evaluated separately for each color channel.  If
multiple light sources are enabled an additional term identical to the
second term above is added for each light source (with different
values for L, n_dot_l and n_dot_h corresponding to the particular
light source).
.SH "STATE VARIABLES"
Information about the current material properties can be retrieved
with the following state variable codes (see vpGeti(3)):
VP_MATERIAL_COUNT, VP_REVERSE_SURFACE_SIDES
.SH ERRORS
The normal return value is VP_OK.  The following error return values
are possible:
.IP VPERROR_BAD_VALUE
Either the material number or the RGB components are invalid.
.IP VPERROR_BAD_OPTION
Either the \fIsurface_side\fR or \fIproperty\fR arguments are invalid.
.SH SEE ALSO
VolPack(3), vpCreateContext(3), vpSetLookupShader(3), vpShadeTable(3),
vpGetMaterial(3)
