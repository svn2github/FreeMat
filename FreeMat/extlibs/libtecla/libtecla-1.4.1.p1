diff -Naur original/libtecla/CHANGES patched/libtecla/CHANGES
--- original/libtecla/CHANGES	2002-05-25 23:34:48.000000000 -0700
+++ patched/libtecla/CHANGES	2002-11-25 20:15:05.000000000 -0800
@@ -2,6 +2,19 @@
 convention in which the day comes before the month (ie. DD/MM/YYYY).
 The most recent modifications are listed first.
 
+25/11/2002 mcs@astro.caltech.edu  (patch requested by Pankaj Kr Rathore)
+           getline.c
+             The gl->linelen variable sets the maximum number of
+             characters allowed in an input line excluding the
+             terminating "\0". When passing the line buffer to
+             history search functions I was sending this value as
+             the allocated size of the line buffer, instead of
+             gl->linelen+1. This resulted in an error message if the
+             line buffer was currently full, since the history
+             function could see that the line was actually one
+             character longer than the claimed dimension. Fixed
+             by passing gl->linelen+1 instead of gl->linelen.
+
 25/05/2002 mcs@astro.caltech.edu  (based on suggestions by Paul Smith)
            pathutil.c
              Apparently, under QNX pathconf("/",_PC_PATH_MAX) returns
diff -Naur original/libtecla/getline.c patched/libtecla/getline.c
--- original/libtecla/getline.c	2002-02-12 18:36:13.000000000 -0800
+++ patched/libtecla/getline.c	2002-11-25 20:09:03.000000000 -0800
@@ -1667,7 +1667,7 @@
  * the normal input stream.
  */
   if(gl->file_fp) {
-    if(fgets(gl->line, gl->linelen, gl->file_fp))
+    if(fgets(gl->line, gl->linelen+1, gl->file_fp))
       return gl->line;
     gl_revert_input(gl);
   };
@@ -1675,7 +1675,7 @@
  * Is input coming from a non-interactive source?
  */
   if(!gl->is_term)
-    return fgets(gl->line, gl->linelen, gl->input_fp);
+    return fgets(gl->line, gl->linelen+1, gl->input_fp);
 /*
  * Record the new prompt and its displayed width.
  */
@@ -2036,7 +2036,7 @@
   if(gl->preload_history) {
     gl->preload_history = 0;
     if(gl->preload_id) {
-      if(_glh_recall_line(gl->glh, gl->preload_id, gl->line, gl->linelen)) {
+      if(_glh_recall_line(gl->glh, gl->preload_id, gl->line, gl->linelen+1)) {
 	gl->ntotal = strlen(gl->line);
 	gl->buff_curpos = strlen(gl->line);
       };
@@ -4137,9 +4137,9 @@
  * fails we can return since nothing has changed otherwise we must continue
  * and update the line state.
  */
-  if(_glh_find_backwards(gl->glh, gl->line, gl->linelen) == NULL)
+  if(_glh_find_backwards(gl->glh, gl->line, gl->linelen+1) == NULL)
     return 0;
-  while(--count && _glh_find_backwards(gl->glh, gl->line, gl->linelen))
+  while(--count && _glh_find_backwards(gl->glh, gl->line, gl->linelen+1))
     ;
 /*
  * Record the number of characters in the new string.
@@ -4171,7 +4171,7 @@
  * session from a previous entered line if possible.
  */
   if(_glh_line_id(gl->glh, 0) == 0 && gl->preload_id) {
-    _glh_recall_line(gl->glh, gl->preload_id, gl->line, gl->linelen);
+    _glh_recall_line(gl->glh, gl->preload_id, gl->line, gl->linelen+1);
     gl->preload_id = 0;
   } else {
 /*
@@ -4184,9 +4184,9 @@
  * fails we can return since nothing has changed otherwise we must continue
  * and update the line state.
  */
-    if(_glh_find_forwards(gl->glh, gl->line, gl->linelen) == NULL)
+    if(_glh_find_forwards(gl->glh, gl->line, gl->linelen+1) == NULL)
       return 0;
-    while(--count && _glh_find_forwards(gl->glh, gl->line, gl->linelen))
+    while(--count && _glh_find_forwards(gl->glh, gl->line, gl->linelen+1))
       ;
   };
 /*
@@ -4242,7 +4242,7 @@
  * Search backwards for a match to the part of the line which precedes the
  * cursor.
  */
-  if(_glh_find_backwards(gl->glh, gl->line, gl->linelen) == NULL)
+  if(_glh_find_backwards(gl->glh, gl->line, gl->linelen+1) == NULL)
     return 0;
 /*
  * Record the number of characters in the new string.
@@ -4303,7 +4303,7 @@
 /*
  * Search forwards for the next matching line.
  */
-  if(_glh_find_forwards(gl->glh, gl->line, gl->linelen) == NULL)
+  if(_glh_find_forwards(gl->glh, gl->line, gl->linelen+1) == NULL)
     return 0;
 /*
  * Record the number of characters in the new string.
@@ -5475,7 +5475,7 @@
 /*
  * Recall the next oldest line in the history list.
  */
-  if(_glh_oldest_line(gl->glh, gl->line, gl->linelen) == NULL)
+  if(_glh_oldest_line(gl->glh, gl->line, gl->linelen+1) == NULL)
     return 0;
 /*
  * Record the number of characters in the new string.
@@ -5510,7 +5510,7 @@
 /*
  * Recall the next oldest line in the history list.
  */
-  if(_glh_current_line(gl->glh, gl->line, gl->linelen) == NULL)
+  if(_glh_current_line(gl->glh, gl->line, gl->linelen+1) == NULL)
     return 0;
 /*
  * Record the number of characters in the new string.
@@ -7235,7 +7235,7 @@
  * Attempt to load from the specified file.
  */
   if(_glh_load_history(gl->glh, expansion->files[0], comment,
-		       gl->cutbuf, gl->linelen)) {
+		       gl->cutbuf, gl->linelen+1)) {
     gl->cutbuf[0] = '\0';
     return 1;
   };
