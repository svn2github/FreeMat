'\" Copyright (c) 1994 The Board of Trustees of The Leland Stanford
'\" Junior University.  All rights reserved.
'\" 
'\" Permission to use, copy, modify and distribute this software and its
'\" documentation for any purpose is hereby granted without fee, provided
'\" that the above copyright notice and this permission notice appear in
'\" all copies of this software and that you do not sell the software.
'\" Commercial licensing is available by contacting the author.
'\" 
'\" THE SOFTWARE IS PROVIDED "AS IS" AND WITHOUT WARRANTY OF ANY KIND,
'\" EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY
'\" WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
'\" 
'\" Author:
'\"    Phil Lacroute
'\"    Computer Systems Laboratory
'\"    Electrical Engineering Dept.
'\"    Stanford University
'\" 
'\" $Date$
'\" $Revision$
'\"
'\" Macros
'\" .FS <type>  --  function start
'\"     <type> is return type of function
'\"     name and arguments follow on next line
.de FS
.PD 0v
.PP
\\$1
.HP 8
..
'\" .FA  --  function arguments
'\"     one argument declaration follows on next line
.de FA
.IP " " 4
..
'\" .FE  --  function end
'\"     end of function declaration
.de FE
.PD
..
'\" .DS  --  display start
.de DS
.IP " " 4
..
'\" .DE  --  display done
.de DE
.LP
..
.TH vpCreateContext 3 "" VolPack
.SH NAME
vpCreateContext, vpDestroyContext \- create/destroy a rendering context
.SH SYNOPSIS
#include <volpack.h>
.sp
.FS "vpContext *"
\fBvpCreateContext()\fR
.FE
.sp
.FS void
\fBvpDestroyContext(vpc)\fR
.FA
vpContext *\fIvpc;\fR
.FE
.SH ARGUMENTS
.IP \fIvpc\fR
VolPack context from \fBvpCreateContext.\fR
.SH DESCRIPTION
\fBvpCreateContext\fR returns a handle for a new rendering context.
It contains default values for most of the rendering parameters.
.PP
\fBvpDestroyContext\fR destroys a rendering context and frees the
associated memory.  Only data structures allocated by the library are
freed; application-defined data structures that are referenced in the
rendering context through a pointer are not freed (e.g.\ arrays of
volume data and shading lookup tables).  The application is
responsible for keeping track of such data structures and freeing them
when appropriate.
.SH SEE ALSO
VolPack(3)
