// WARNING - This file is automatically generated by
// the siggen.py script in tools.  Do not
// edit it by hand, or changes will be lost!  If you
// need to add a built in function to FreeMat, add a
// signature block to its documentation and rerun siggen.


// First each function gets prototyped.
#include "Array.hpp"
#include "Context.hpp"
#include "Class.hpp"


ArrayVector ClassFunction(int, const ArrayVector&);
ArrayVector FuncPtrDispFunction(int, const ArrayVector&, Interpreter*);
ArrayVector FuncPtrHorzCatFunction(int, const ArrayVector&);
ArrayVector FuncPtrSubsrefFunction(int, const ArrayVector&, Interpreter*);
ArrayVector FuncPtrFevalFunction(int, const ArrayVector&, Interpreter*);
ArrayVector FuncPtrSubsasgnFunction(int, const ArrayVector&, Interpreter*);
ArrayVector LoadLibFunction(int, const ArrayVector&, Interpreter*);
ArrayVector ImportFunction(int, const ArrayVector&, Interpreter*);
ArrayVector BlaslibFunction(int, const ArrayVector&);
ArrayVector AnonFuncDispFunction(int, const ArrayVector&, Interpreter*);
ArrayVector AnonFuncSubsrefFunction(int, const ArrayVector&, Interpreter*);
ArrayVector AnonFuncFevalFunction(int, const ArrayVector&, Interpreter*);


void LoadBuiltinFunctionsFreeMat(Context *context, bool guiflag) {
  context->addFunction("class",ClassFunction,-1,1,NULL);
  context->addSpecialFunction("@functionpointer:display",FuncPtrDispFunction,1,0,"x",NULL);
  context->addFunction("@functionpointer:horzcat",FuncPtrHorzCatFunction,-1,1,NULL);
  context->addSpecialFunction("@functionpointer:subsref",FuncPtrSubsrefFunction,2,-1,"x","s",NULL);
  context->addSpecialFunction("@functionpointer:feval",FuncPtrFevalFunction,2,-1,"x","varargin",NULL);
  context->addSpecialFunction("@functionpointer:subsasgn",FuncPtrSubsasgnFunction,3,1,"x","s","y",NULL);
  context->addSpecialFunction("loadlib",LoadLibFunction,5,0,"libfile","symbolname","functionname","nargin","nargout",NULL);
  context->addSpecialFunction("import",ImportFunction,5,0,"libraryname","symbol","function","returntype","arguments",NULL);
  context->addFunction("blaslib",BlaslibFunction,-1,0,NULL);
  context->addSpecialFunction("@anonfunction:display",AnonFuncDispFunction,1,0,"x",NULL);
  context->addSpecialFunction("@anonfunction:subsref",AnonFuncSubsrefFunction,2,-1,"x","s",NULL);
  context->addSpecialFunction("@anonfunction:feval",AnonFuncFevalFunction,2,-1,"x","varargin",NULL);


// Writing hierarchy definitions for classes
}

