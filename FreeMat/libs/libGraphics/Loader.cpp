// WARNING - This file is automatically generated by
// the siggen.py script in tools.  Do not
// edit it by hand, or changes will be lost!  If you
// need to add a built in function to FreeMat, add a
// signature block to its documentation and rerun siggen.


// First each function gets prototyped.
#include "Array.hpp"
#include "Context.hpp"
#include "Class.hpp"


ArrayVector GLDefMaterialFunction(int, const ArrayVector&);
ArrayVector GLLinesFunction(int, const ArrayVector&);
ArrayVector GLClumpFunction(int, const ArrayVector&);
ArrayVector GLAssemblyFunction(int, const ArrayVector&);
ArrayVector GLNodeFunction(int, const ArrayVector&);
ArrayVector GLShowFunction(int, const ArrayVector&);
ArrayVector VTKFigureFunction(int, const ArrayVector&, Interpreter*);
ArrayVector VolRenderFunction(int, const ArrayVector&, Interpreter*);
ArrayVector DrawNowFunction(int, const ArrayVector&);
ArrayVector HFigureFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HAxesFunction(int, const ArrayVector&, Interpreter*);
ArrayVector SizeFigFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HSetFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HGetFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HLineFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HContourFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HUIControlFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HImageFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HTextFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HSurfaceFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HPatchFunction(int, const ArrayVector&, Interpreter*);
ArrayVector FigRaiseFunction(int, const ArrayVector&, Interpreter*);
ArrayVector FigLowerFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HGCFFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HGCAFunction(int, const ArrayVector&, Interpreter*);
ArrayVector HPropertyValidateFunction(int, const ArrayVector&);
ArrayVector HCloseFunction(int, const ArrayVector&);
ArrayVector HCopyFunction(int, const ArrayVector&);
ArrayVector HPrintFunction(int, const ArrayVector&);
ArrayVector HTextBitmapFunction(int, const ArrayVector&);
ArrayVector HRawPlotFunction(int, const ArrayVector&);
ArrayVector HPointFunction(int, const ArrayVector&);
ArrayVector HIs2DViewFunction(int, const ArrayVector&);


void LoadBuiltinFunctionsGraphics(Context *context, bool guiflag) {
  if (guiflag)  context->addGfxFunction("gldefmaterial",GLDefMaterialFunction,5,0,"name","ambient","diffuse","specular","shininess",NULL);
  if (guiflag)  context->addGfxFunction("gllines",GLLinesFunction,3,0,"name","vector","color",NULL);
  if (guiflag)  context->addGfxFunction("glclump",GLClumpFunction,2,0,"name","vector",NULL);
  if (guiflag)  context->addGfxFunction("glassembly",GLAssemblyFunction,2,0,"name","varargin",NULL);
  if (guiflag)  context->addGfxFunction("glnode",GLNodeFunction,3,0,"name","material","pointset",NULL);
  if (guiflag)  context->addGfxFunction("glshow",GLShowFunction,2,0,"name","scale",NULL);
  if (guiflag)  context->addGfxSpecialFunction("vtkfigure",VTKFigureFunction,1,0,"render",NULL);
  if (guiflag)  context->addGfxSpecialFunction("volrender",VolRenderFunction,4,0,"volume","opacity","ctransfer","material",NULL);
  if (guiflag)  context->addGfxFunction("drawnow",DrawNowFunction,0,0,NULL);
  if (guiflag)  context->addGfxSpecialFunction("figure",HFigureFunction,1,1,"number",NULL);
  if (guiflag)  context->addGfxSpecialFunction("axes",HAxesFunction,-1,1,NULL);
  if (guiflag)  context->addGfxSpecialFunction("sizefig",SizeFigFunction,2,0,"width","height",NULL);
  if (guiflag)  context->addGfxSpecialFunction("set",HSetFunction,-1,0,NULL);
  if (guiflag)  context->addGfxSpecialFunction("get",HGetFunction,2,1,"handle","property",NULL);
  if (guiflag)  context->addGfxSpecialFunction("hline",HLineFunction,-1,1,NULL);
  if (guiflag)  context->addGfxSpecialFunction("hcontour",HContourFunction,-1,1,NULL);
  if (guiflag)  context->addGfxSpecialFunction("uicontrol",HUIControlFunction,-1,1,NULL);
  if (guiflag)  context->addGfxSpecialFunction("himage",HImageFunction,-1,1,NULL);
  if (guiflag)  context->addGfxSpecialFunction("htext",HTextFunction,-1,1,NULL);
  if (guiflag)  context->addGfxSpecialFunction("surface",HSurfaceFunction,-1,1,NULL);
  if (guiflag)  context->addGfxSpecialFunction("hpatch",HPatchFunction,-1,1,NULL);
  if (guiflag)  context->addGfxSpecialFunction("figraise",FigRaiseFunction,1,0,"handle",NULL);
  if (guiflag)  context->addGfxSpecialFunction("figlower",FigLowerFunction,1,0,"handle",NULL);
  if (guiflag)  context->addGfxSpecialFunction("gcf",HGCFFunction,0,1,NULL);
  if (guiflag)  context->addGfxSpecialFunction("gca",HGCAFunction,0,1,NULL);
  if (guiflag)  context->addGfxFunction("pvalid",HPropertyValidateFunction,2,1,"type","property",NULL);
  if (guiflag)  context->addGfxFunction("close",HCloseFunction,1,0,"handle",NULL);
  if (guiflag)  context->addGfxFunction("copy",HCopyFunction,0,0,NULL);
  if (guiflag)  context->addGfxFunction("print",HPrintFunction,-1,0,NULL);
  if (guiflag)  context->addGfxFunction("htextbitmap",HTextBitmapFunction,3,1,"fontname","size","text",NULL);
  if (guiflag)  context->addGfxFunction("hrawplot",HRawPlotFunction,2,0,"filename","commands",NULL);
  if (guiflag)  context->addGfxFunction("hpoint",HPointFunction,0,1,NULL);
  if (guiflag)  context->addGfxFunction("is2dview",HIs2DViewFunction,1,1,"handle",NULL);


// Writing hierarchy definitions for classes
}

