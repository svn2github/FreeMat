# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CXX = @CXX@
DEPDIR = @DEPDIR@
F77 = @F77@
FLIBS = @FLIBS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LFLAGS = @LFLAGS@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
miniblasdir = @miniblasdir@
minilapackdir = @minilapackdir@
noinst_LIBRARIES = libMiniLAPACK.a

libMiniLAPACK_a_SOURCES = complex16/zdrscl.f \
complex16/zgebak.f \
complex16/zgebal.f \
complex16/zgecon.f \
complex16/zgeequ.f \
complex16/zgeevx.f \
complex16/zgehd2.f \
complex16/zgehrd.f \
complex16/zgelsy.f \
complex16/zgeqp3.f \
complex16/zgeqr2.f \
complex16/zgeqrf.f \
complex16/zgerfs.f \
complex16/zgesvx.f \
complex16/zgetf2.f \
complex16/zgetrf.f \
complex16/zgetrs.f \
complex16/zhseqr.f \
complex16/zlacgv.f \
complex16/zlacon.f \
complex16/zlacpy.f \
complex16/zladiv.f \
complex16/zlahqr.f \
complex16/zlahrd.f \
complex16/zlaic1.f \
complex16/zlange.f \
complex16/zlanhs.f \
complex16/zlantr.f \
complex16/zlaqge.f \
complex16/zlaqp2.f \
complex16/zlaqps.f \
complex16/zlarfb.f \
complex16/zlarf.f \
complex16/zlarfg.f \
complex16/zlarft.f \
complex16/zlarfx.f \
complex16/zlartg.f \
complex16/zlarzb.f \
complex16/zlarz.f \
complex16/zlarzt.f \
complex16/zlascl.f \
complex16/zlaset.f \
complex16/zlassq.f \
complex16/zlaswp.f \
complex16/zlatrs.f \
complex16/zlatrz.f \
complex16/zrot.f \
complex16/ztrevc.f \
complex16/ztrexc.f \
complex16/ztrsna.f \
complex16/ztzrzf.f \
complex16/zung2r.f \
complex16/zunghr.f \
complex16/zungqr.f \
complex16/zunm2r.f \
complex16/zunmqr.f \
complex16/zunmr3.f \
complex16/zunmrz.f \
complex/cgebak.f \
complex/cgebal.f \
complex/cgecon.f \
complex/cgeequ.f \
complex/cgeevx.f \
complex/cgehd2.f \
complex/cgehrd.f \
complex/cgelsy.f \
complex/cgeqp3.f \
complex/cgeqr2.f \
complex/cgeqrf.f \
complex/cgerfs.f \
complex/cgesvx.f \
complex/cgetf2.f \
complex/cgetrf.f \
complex/cgetrs.f \
complex/chseqr.f \
complex/clacgv.f \
complex/clacon.f \
complex/clacpy.f \
complex/cladiv.f \
complex/clahqr.f \
complex/clahrd.f \
complex/claic1.f \
complex/clange.f \
complex/clanhs.f \
complex/clantr.f \
complex/claqge.f \
complex/claqp2.f \
complex/claqps.f \
complex/clarfb.f \
complex/clarf.f \
complex/clarfg.f \
complex/clarft.f \
complex/clarfx.f \
complex/clartg.f \
complex/clarzb.f \
complex/clarz.f \
complex/clarzt.f \
complex/clascl.f \
complex/claset.f \
complex/classq.f \
complex/claswp.f \
complex/clatrs.f \
complex/clatrz.f \
complex/crot.f \
complex/csrscl.f \
complex/ctrevc.f \
complex/ctrexc.f \
complex/ctrsna.f \
complex/ctzrzf.f \
complex/cung2r.f \
complex/cunghr.f \
complex/cungqr.f \
complex/cunm2r.f \
complex/cunmqr.f \
complex/cunmr3.f \
complex/cunmrz.f \
double/dgebak.f \
double/dgebal.f \
double/dgecon.f \
double/dgeequ.f \
double/dgeevx.f \
double/dgehd2.f \
double/dgehrd.f \
double/dgelsy.f \
double/dgeqp3.f \
double/dgeqr2.f \
double/dgeqrf.f \
double/dgerfs.f \
double/dgesvx.f \
double/dgetf2.f \
double/dgetrf.f \
double/dgetrs.f \
double/dhseqr.f \
double/dlabad.f \
double/dlacon.f \
double/dlacpy.f \
double/dladiv.f \
double/dlaexc.f \
double/dlahqr.f \
double/dlahrd.f \
double/dlaic1.f \
double/dlaln2.f \
double/dlamch.f \
double/dlange.f \
double/dlanhs.f \
double/dlantr.f \
double/dlanv2.f \
double/dlapy2.f \
double/dlapy3.f \
double/dlaqge.f \
double/dlaqp2.f \
double/dlaqps.f \
double/dlaqtr.f \
double/dlarfb.f \
double/dlarf.f \
double/dlarfg.f \
double/dlarft.f \
double/dlarfx.f \
double/dlartg.f \
double/dlarzb.f \
double/dlarz.f \
double/dlarzt.f \
double/dlascl.f \
double/dlaset.f \
double/dlassq.f \
double/dlaswp.f \
double/dlasy2.f \
double/dlatrs.f \
double/dlatrz.f \
double/dorg2r.f \
double/dorghr.f \
double/dorgqr.f \
double/dorm2r.f \
double/dormqr.f \
double/dormr3.f \
double/dormrz.f \
double/drscl.f \
double/dtrevc.f \
double/dtrexc.f \
double/dtrsna.f \
double/dtzrzf.f \
double/dzsum1.f \
single/scsum1.f \
single/sgebak.f \
single/sgebal.f \
single/sgecon.f \
single/sgeequ.f \
single/sgeevx.f \
single/sgehd2.f \
single/sgehrd.f \
single/sgelsy.f \
single/sgeqp3.f \
single/sgeqr2.f \
single/sgeqrf.f \
single/sgerfs.f \
single/sgesvx.f \
single/sgetf2.f \
single/sgetrf.f \
single/sgetrs.f \
single/shseqr.f \
single/slabad.f \
single/slacon.f \
single/slacpy.f \
single/sladiv.f \
single/slaexc.f \
single/slahqr.f \
single/slahrd.f \
single/slaic1.f \
single/slaln2.f \
single/slamch.f \
single/slange.f \
single/slanhs.f \
single/slantr.f \
single/slanv2.f \
single/slapy2.f \
single/slapy3.f \
single/slaqge.f \
single/slaqp2.f \
single/slaqps.f \
single/slaqtr.f \
single/slarfb.f \
single/slarf.f \
single/slarfg.f \
single/slarft.f \
single/slarfx.f \
single/slartg.f \
single/slarzb.f \
single/slarz.f \
single/slarzt.f \
single/slascl.f \
single/slaset.f \
single/slassq.f \
single/slaswp.f \
single/slasy2.f \
single/slatrs.f \
single/slatrz.f \
single/sorg2r.f \
single/sorghr.f \
single/sorgqr.f \
single/sorm2r.f \
single/sormqr.f \
single/sormr3.f \
single/sormrz.f \
single/srscl.f \
single/strevc.f \
single/strexc.f \
single/strsna.f \
single/stzrzf.f \
util/icmax1.f \
util/ieeeck.f \
util/ilaenv.f \
util/izmax1.f 


EXTRA_DIST = bootstrap
AUTOMAKE_OPTIONS = foreign
subdir = libs/libMiniLAPACK
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libMiniLAPACK_a_AR = $(AR) cru
libMiniLAPACK_a_LIBADD =
am_libMiniLAPACK_a_OBJECTS = zdrscl.$(OBJEXT) zgebak.$(OBJEXT) \
	zgebal.$(OBJEXT) zgecon.$(OBJEXT) zgeequ.$(OBJEXT) \
	zgeevx.$(OBJEXT) zgehd2.$(OBJEXT) zgehrd.$(OBJEXT) \
	zgelsy.$(OBJEXT) zgeqp3.$(OBJEXT) zgeqr2.$(OBJEXT) \
	zgeqrf.$(OBJEXT) zgerfs.$(OBJEXT) zgesvx.$(OBJEXT) \
	zgetf2.$(OBJEXT) zgetrf.$(OBJEXT) zgetrs.$(OBJEXT) \
	zhseqr.$(OBJEXT) zlacgv.$(OBJEXT) zlacon.$(OBJEXT) \
	zlacpy.$(OBJEXT) zladiv.$(OBJEXT) zlahqr.$(OBJEXT) \
	zlahrd.$(OBJEXT) zlaic1.$(OBJEXT) zlange.$(OBJEXT) \
	zlanhs.$(OBJEXT) zlantr.$(OBJEXT) zlaqge.$(OBJEXT) \
	zlaqp2.$(OBJEXT) zlaqps.$(OBJEXT) zlarfb.$(OBJEXT) \
	zlarf.$(OBJEXT) zlarfg.$(OBJEXT) zlarft.$(OBJEXT) \
	zlarfx.$(OBJEXT) zlartg.$(OBJEXT) zlarzb.$(OBJEXT) \
	zlarz.$(OBJEXT) zlarzt.$(OBJEXT) zlascl.$(OBJEXT) \
	zlaset.$(OBJEXT) zlassq.$(OBJEXT) zlaswp.$(OBJEXT) \
	zlatrs.$(OBJEXT) zlatrz.$(OBJEXT) zrot.$(OBJEXT) \
	ztrevc.$(OBJEXT) ztrexc.$(OBJEXT) ztrsna.$(OBJEXT) \
	ztzrzf.$(OBJEXT) zung2r.$(OBJEXT) zunghr.$(OBJEXT) \
	zungqr.$(OBJEXT) zunm2r.$(OBJEXT) zunmqr.$(OBJEXT) \
	zunmr3.$(OBJEXT) zunmrz.$(OBJEXT) cgebak.$(OBJEXT) \
	cgebal.$(OBJEXT) cgecon.$(OBJEXT) cgeequ.$(OBJEXT) \
	cgeevx.$(OBJEXT) cgehd2.$(OBJEXT) cgehrd.$(OBJEXT) \
	cgelsy.$(OBJEXT) cgeqp3.$(OBJEXT) cgeqr2.$(OBJEXT) \
	cgeqrf.$(OBJEXT) cgerfs.$(OBJEXT) cgesvx.$(OBJEXT) \
	cgetf2.$(OBJEXT) cgetrf.$(OBJEXT) cgetrs.$(OBJEXT) \
	chseqr.$(OBJEXT) clacgv.$(OBJEXT) clacon.$(OBJEXT) \
	clacpy.$(OBJEXT) cladiv.$(OBJEXT) clahqr.$(OBJEXT) \
	clahrd.$(OBJEXT) claic1.$(OBJEXT) clange.$(OBJEXT) \
	clanhs.$(OBJEXT) clantr.$(OBJEXT) claqge.$(OBJEXT) \
	claqp2.$(OBJEXT) claqps.$(OBJEXT) clarfb.$(OBJEXT) \
	clarf.$(OBJEXT) clarfg.$(OBJEXT) clarft.$(OBJEXT) \
	clarfx.$(OBJEXT) clartg.$(OBJEXT) clarzb.$(OBJEXT) \
	clarz.$(OBJEXT) clarzt.$(OBJEXT) clascl.$(OBJEXT) \
	claset.$(OBJEXT) classq.$(OBJEXT) claswp.$(OBJEXT) \
	clatrs.$(OBJEXT) clatrz.$(OBJEXT) crot.$(OBJEXT) \
	csrscl.$(OBJEXT) ctrevc.$(OBJEXT) ctrexc.$(OBJEXT) \
	ctrsna.$(OBJEXT) ctzrzf.$(OBJEXT) cung2r.$(OBJEXT) \
	cunghr.$(OBJEXT) cungqr.$(OBJEXT) cunm2r.$(OBJEXT) \
	cunmqr.$(OBJEXT) cunmr3.$(OBJEXT) cunmrz.$(OBJEXT) \
	dgebak.$(OBJEXT) dgebal.$(OBJEXT) dgecon.$(OBJEXT) \
	dgeequ.$(OBJEXT) dgeevx.$(OBJEXT) dgehd2.$(OBJEXT) \
	dgehrd.$(OBJEXT) dgelsy.$(OBJEXT) dgeqp3.$(OBJEXT) \
	dgeqr2.$(OBJEXT) dgeqrf.$(OBJEXT) dgerfs.$(OBJEXT) \
	dgesvx.$(OBJEXT) dgetf2.$(OBJEXT) dgetrf.$(OBJEXT) \
	dgetrs.$(OBJEXT) dhseqr.$(OBJEXT) dlabad.$(OBJEXT) \
	dlacon.$(OBJEXT) dlacpy.$(OBJEXT) dladiv.$(OBJEXT) \
	dlaexc.$(OBJEXT) dlahqr.$(OBJEXT) dlahrd.$(OBJEXT) \
	dlaic1.$(OBJEXT) dlaln2.$(OBJEXT) dlamch.$(OBJEXT) \
	dlange.$(OBJEXT) dlanhs.$(OBJEXT) dlantr.$(OBJEXT) \
	dlanv2.$(OBJEXT) dlapy2.$(OBJEXT) dlapy3.$(OBJEXT) \
	dlaqge.$(OBJEXT) dlaqp2.$(OBJEXT) dlaqps.$(OBJEXT) \
	dlaqtr.$(OBJEXT) dlarfb.$(OBJEXT) dlarf.$(OBJEXT) \
	dlarfg.$(OBJEXT) dlarft.$(OBJEXT) dlarfx.$(OBJEXT) \
	dlartg.$(OBJEXT) dlarzb.$(OBJEXT) dlarz.$(OBJEXT) \
	dlarzt.$(OBJEXT) dlascl.$(OBJEXT) dlaset.$(OBJEXT) \
	dlassq.$(OBJEXT) dlaswp.$(OBJEXT) dlasy2.$(OBJEXT) \
	dlatrs.$(OBJEXT) dlatrz.$(OBJEXT) dorg2r.$(OBJEXT) \
	dorghr.$(OBJEXT) dorgqr.$(OBJEXT) dorm2r.$(OBJEXT) \
	dormqr.$(OBJEXT) dormr3.$(OBJEXT) dormrz.$(OBJEXT) \
	drscl.$(OBJEXT) dtrevc.$(OBJEXT) dtrexc.$(OBJEXT) \
	dtrsna.$(OBJEXT) dtzrzf.$(OBJEXT) dzsum1.$(OBJEXT) \
	scsum1.$(OBJEXT) sgebak.$(OBJEXT) sgebal.$(OBJEXT) \
	sgecon.$(OBJEXT) sgeequ.$(OBJEXT) sgeevx.$(OBJEXT) \
	sgehd2.$(OBJEXT) sgehrd.$(OBJEXT) sgelsy.$(OBJEXT) \
	sgeqp3.$(OBJEXT) sgeqr2.$(OBJEXT) sgeqrf.$(OBJEXT) \
	sgerfs.$(OBJEXT) sgesvx.$(OBJEXT) sgetf2.$(OBJEXT) \
	sgetrf.$(OBJEXT) sgetrs.$(OBJEXT) shseqr.$(OBJEXT) \
	slabad.$(OBJEXT) slacon.$(OBJEXT) slacpy.$(OBJEXT) \
	sladiv.$(OBJEXT) slaexc.$(OBJEXT) slahqr.$(OBJEXT) \
	slahrd.$(OBJEXT) slaic1.$(OBJEXT) slaln2.$(OBJEXT) \
	slamch.$(OBJEXT) slange.$(OBJEXT) slanhs.$(OBJEXT) \
	slantr.$(OBJEXT) slanv2.$(OBJEXT) slapy2.$(OBJEXT) \
	slapy3.$(OBJEXT) slaqge.$(OBJEXT) slaqp2.$(OBJEXT) \
	slaqps.$(OBJEXT) slaqtr.$(OBJEXT) slarfb.$(OBJEXT) \
	slarf.$(OBJEXT) slarfg.$(OBJEXT) slarft.$(OBJEXT) \
	slarfx.$(OBJEXT) slartg.$(OBJEXT) slarzb.$(OBJEXT) \
	slarz.$(OBJEXT) slarzt.$(OBJEXT) slascl.$(OBJEXT) \
	slaset.$(OBJEXT) slassq.$(OBJEXT) slaswp.$(OBJEXT) \
	slasy2.$(OBJEXT) slatrs.$(OBJEXT) slatrz.$(OBJEXT) \
	sorg2r.$(OBJEXT) sorghr.$(OBJEXT) sorgqr.$(OBJEXT) \
	sorm2r.$(OBJEXT) sormqr.$(OBJEXT) sormr3.$(OBJEXT) \
	sormrz.$(OBJEXT) srscl.$(OBJEXT) strevc.$(OBJEXT) \
	strexc.$(OBJEXT) strsna.$(OBJEXT) stzrzf.$(OBJEXT) \
	icmax1.$(OBJEXT) ieeeck.$(OBJEXT) ilaenv.$(OBJEXT) \
	izmax1.$(OBJEXT)
libMiniLAPACK_a_OBJECTS = $(am_libMiniLAPACK_a_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
FFLAGS = @FFLAGS@
DIST_SOURCES = $(libMiniLAPACK_a_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libMiniLAPACK_a_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .f .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  libs/libMiniLAPACK/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
zdrscl.$(OBJEXT): complex16/zdrscl.f
zgebak.$(OBJEXT): complex16/zgebak.f
zgebal.$(OBJEXT): complex16/zgebal.f
zgecon.$(OBJEXT): complex16/zgecon.f
zgeequ.$(OBJEXT): complex16/zgeequ.f
zgeevx.$(OBJEXT): complex16/zgeevx.f
zgehd2.$(OBJEXT): complex16/zgehd2.f
zgehrd.$(OBJEXT): complex16/zgehrd.f
zgelsy.$(OBJEXT): complex16/zgelsy.f
zgeqp3.$(OBJEXT): complex16/zgeqp3.f
zgeqr2.$(OBJEXT): complex16/zgeqr2.f
zgeqrf.$(OBJEXT): complex16/zgeqrf.f
zgerfs.$(OBJEXT): complex16/zgerfs.f
zgesvx.$(OBJEXT): complex16/zgesvx.f
zgetf2.$(OBJEXT): complex16/zgetf2.f
zgetrf.$(OBJEXT): complex16/zgetrf.f
zgetrs.$(OBJEXT): complex16/zgetrs.f
zhseqr.$(OBJEXT): complex16/zhseqr.f
zlacgv.$(OBJEXT): complex16/zlacgv.f
zlacon.$(OBJEXT): complex16/zlacon.f
zlacpy.$(OBJEXT): complex16/zlacpy.f
zladiv.$(OBJEXT): complex16/zladiv.f
zlahqr.$(OBJEXT): complex16/zlahqr.f
zlahrd.$(OBJEXT): complex16/zlahrd.f
zlaic1.$(OBJEXT): complex16/zlaic1.f
zlange.$(OBJEXT): complex16/zlange.f
zlanhs.$(OBJEXT): complex16/zlanhs.f
zlantr.$(OBJEXT): complex16/zlantr.f
zlaqge.$(OBJEXT): complex16/zlaqge.f
zlaqp2.$(OBJEXT): complex16/zlaqp2.f
zlaqps.$(OBJEXT): complex16/zlaqps.f
zlarfb.$(OBJEXT): complex16/zlarfb.f
zlarf.$(OBJEXT): complex16/zlarf.f
zlarfg.$(OBJEXT): complex16/zlarfg.f
zlarft.$(OBJEXT): complex16/zlarft.f
zlarfx.$(OBJEXT): complex16/zlarfx.f
zlartg.$(OBJEXT): complex16/zlartg.f
zlarzb.$(OBJEXT): complex16/zlarzb.f
zlarz.$(OBJEXT): complex16/zlarz.f
zlarzt.$(OBJEXT): complex16/zlarzt.f
zlascl.$(OBJEXT): complex16/zlascl.f
zlaset.$(OBJEXT): complex16/zlaset.f
zlassq.$(OBJEXT): complex16/zlassq.f
zlaswp.$(OBJEXT): complex16/zlaswp.f
zlatrs.$(OBJEXT): complex16/zlatrs.f
zlatrz.$(OBJEXT): complex16/zlatrz.f
zrot.$(OBJEXT): complex16/zrot.f
ztrevc.$(OBJEXT): complex16/ztrevc.f
ztrexc.$(OBJEXT): complex16/ztrexc.f
ztrsna.$(OBJEXT): complex16/ztrsna.f
ztzrzf.$(OBJEXT): complex16/ztzrzf.f
zung2r.$(OBJEXT): complex16/zung2r.f
zunghr.$(OBJEXT): complex16/zunghr.f
zungqr.$(OBJEXT): complex16/zungqr.f
zunm2r.$(OBJEXT): complex16/zunm2r.f
zunmqr.$(OBJEXT): complex16/zunmqr.f
zunmr3.$(OBJEXT): complex16/zunmr3.f
zunmrz.$(OBJEXT): complex16/zunmrz.f
cgebak.$(OBJEXT): complex/cgebak.f
cgebal.$(OBJEXT): complex/cgebal.f
cgecon.$(OBJEXT): complex/cgecon.f
cgeequ.$(OBJEXT): complex/cgeequ.f
cgeevx.$(OBJEXT): complex/cgeevx.f
cgehd2.$(OBJEXT): complex/cgehd2.f
cgehrd.$(OBJEXT): complex/cgehrd.f
cgelsy.$(OBJEXT): complex/cgelsy.f
cgeqp3.$(OBJEXT): complex/cgeqp3.f
cgeqr2.$(OBJEXT): complex/cgeqr2.f
cgeqrf.$(OBJEXT): complex/cgeqrf.f
cgerfs.$(OBJEXT): complex/cgerfs.f
cgesvx.$(OBJEXT): complex/cgesvx.f
cgetf2.$(OBJEXT): complex/cgetf2.f
cgetrf.$(OBJEXT): complex/cgetrf.f
cgetrs.$(OBJEXT): complex/cgetrs.f
chseqr.$(OBJEXT): complex/chseqr.f
clacgv.$(OBJEXT): complex/clacgv.f
clacon.$(OBJEXT): complex/clacon.f
clacpy.$(OBJEXT): complex/clacpy.f
cladiv.$(OBJEXT): complex/cladiv.f
clahqr.$(OBJEXT): complex/clahqr.f
clahrd.$(OBJEXT): complex/clahrd.f
claic1.$(OBJEXT): complex/claic1.f
clange.$(OBJEXT): complex/clange.f
clanhs.$(OBJEXT): complex/clanhs.f
clantr.$(OBJEXT): complex/clantr.f
claqge.$(OBJEXT): complex/claqge.f
claqp2.$(OBJEXT): complex/claqp2.f
claqps.$(OBJEXT): complex/claqps.f
clarfb.$(OBJEXT): complex/clarfb.f
clarf.$(OBJEXT): complex/clarf.f
clarfg.$(OBJEXT): complex/clarfg.f
clarft.$(OBJEXT): complex/clarft.f
clarfx.$(OBJEXT): complex/clarfx.f
clartg.$(OBJEXT): complex/clartg.f
clarzb.$(OBJEXT): complex/clarzb.f
clarz.$(OBJEXT): complex/clarz.f
clarzt.$(OBJEXT): complex/clarzt.f
clascl.$(OBJEXT): complex/clascl.f
claset.$(OBJEXT): complex/claset.f
classq.$(OBJEXT): complex/classq.f
claswp.$(OBJEXT): complex/claswp.f
clatrs.$(OBJEXT): complex/clatrs.f
clatrz.$(OBJEXT): complex/clatrz.f
crot.$(OBJEXT): complex/crot.f
csrscl.$(OBJEXT): complex/csrscl.f
ctrevc.$(OBJEXT): complex/ctrevc.f
ctrexc.$(OBJEXT): complex/ctrexc.f
ctrsna.$(OBJEXT): complex/ctrsna.f
ctzrzf.$(OBJEXT): complex/ctzrzf.f
cung2r.$(OBJEXT): complex/cung2r.f
cunghr.$(OBJEXT): complex/cunghr.f
cungqr.$(OBJEXT): complex/cungqr.f
cunm2r.$(OBJEXT): complex/cunm2r.f
cunmqr.$(OBJEXT): complex/cunmqr.f
cunmr3.$(OBJEXT): complex/cunmr3.f
cunmrz.$(OBJEXT): complex/cunmrz.f
dgebak.$(OBJEXT): double/dgebak.f
dgebal.$(OBJEXT): double/dgebal.f
dgecon.$(OBJEXT): double/dgecon.f
dgeequ.$(OBJEXT): double/dgeequ.f
dgeevx.$(OBJEXT): double/dgeevx.f
dgehd2.$(OBJEXT): double/dgehd2.f
dgehrd.$(OBJEXT): double/dgehrd.f
dgelsy.$(OBJEXT): double/dgelsy.f
dgeqp3.$(OBJEXT): double/dgeqp3.f
dgeqr2.$(OBJEXT): double/dgeqr2.f
dgeqrf.$(OBJEXT): double/dgeqrf.f
dgerfs.$(OBJEXT): double/dgerfs.f
dgesvx.$(OBJEXT): double/dgesvx.f
dgetf2.$(OBJEXT): double/dgetf2.f
dgetrf.$(OBJEXT): double/dgetrf.f
dgetrs.$(OBJEXT): double/dgetrs.f
dhseqr.$(OBJEXT): double/dhseqr.f
dlabad.$(OBJEXT): double/dlabad.f
dlacon.$(OBJEXT): double/dlacon.f
dlacpy.$(OBJEXT): double/dlacpy.f
dladiv.$(OBJEXT): double/dladiv.f
dlaexc.$(OBJEXT): double/dlaexc.f
dlahqr.$(OBJEXT): double/dlahqr.f
dlahrd.$(OBJEXT): double/dlahrd.f
dlaic1.$(OBJEXT): double/dlaic1.f
dlaln2.$(OBJEXT): double/dlaln2.f
dlamch.$(OBJEXT): double/dlamch.f
dlange.$(OBJEXT): double/dlange.f
dlanhs.$(OBJEXT): double/dlanhs.f
dlantr.$(OBJEXT): double/dlantr.f
dlanv2.$(OBJEXT): double/dlanv2.f
dlapy2.$(OBJEXT): double/dlapy2.f
dlapy3.$(OBJEXT): double/dlapy3.f
dlaqge.$(OBJEXT): double/dlaqge.f
dlaqp2.$(OBJEXT): double/dlaqp2.f
dlaqps.$(OBJEXT): double/dlaqps.f
dlaqtr.$(OBJEXT): double/dlaqtr.f
dlarfb.$(OBJEXT): double/dlarfb.f
dlarf.$(OBJEXT): double/dlarf.f
dlarfg.$(OBJEXT): double/dlarfg.f
dlarft.$(OBJEXT): double/dlarft.f
dlarfx.$(OBJEXT): double/dlarfx.f
dlartg.$(OBJEXT): double/dlartg.f
dlarzb.$(OBJEXT): double/dlarzb.f
dlarz.$(OBJEXT): double/dlarz.f
dlarzt.$(OBJEXT): double/dlarzt.f
dlascl.$(OBJEXT): double/dlascl.f
dlaset.$(OBJEXT): double/dlaset.f
dlassq.$(OBJEXT): double/dlassq.f
dlaswp.$(OBJEXT): double/dlaswp.f
dlasy2.$(OBJEXT): double/dlasy2.f
dlatrs.$(OBJEXT): double/dlatrs.f
dlatrz.$(OBJEXT): double/dlatrz.f
dorg2r.$(OBJEXT): double/dorg2r.f
dorghr.$(OBJEXT): double/dorghr.f
dorgqr.$(OBJEXT): double/dorgqr.f
dorm2r.$(OBJEXT): double/dorm2r.f
dormqr.$(OBJEXT): double/dormqr.f
dormr3.$(OBJEXT): double/dormr3.f
dormrz.$(OBJEXT): double/dormrz.f
drscl.$(OBJEXT): double/drscl.f
dtrevc.$(OBJEXT): double/dtrevc.f
dtrexc.$(OBJEXT): double/dtrexc.f
dtrsna.$(OBJEXT): double/dtrsna.f
dtzrzf.$(OBJEXT): double/dtzrzf.f
dzsum1.$(OBJEXT): double/dzsum1.f
scsum1.$(OBJEXT): single/scsum1.f
sgebak.$(OBJEXT): single/sgebak.f
sgebal.$(OBJEXT): single/sgebal.f
sgecon.$(OBJEXT): single/sgecon.f
sgeequ.$(OBJEXT): single/sgeequ.f
sgeevx.$(OBJEXT): single/sgeevx.f
sgehd2.$(OBJEXT): single/sgehd2.f
sgehrd.$(OBJEXT): single/sgehrd.f
sgelsy.$(OBJEXT): single/sgelsy.f
sgeqp3.$(OBJEXT): single/sgeqp3.f
sgeqr2.$(OBJEXT): single/sgeqr2.f
sgeqrf.$(OBJEXT): single/sgeqrf.f
sgerfs.$(OBJEXT): single/sgerfs.f
sgesvx.$(OBJEXT): single/sgesvx.f
sgetf2.$(OBJEXT): single/sgetf2.f
sgetrf.$(OBJEXT): single/sgetrf.f
sgetrs.$(OBJEXT): single/sgetrs.f
shseqr.$(OBJEXT): single/shseqr.f
slabad.$(OBJEXT): single/slabad.f
slacon.$(OBJEXT): single/slacon.f
slacpy.$(OBJEXT): single/slacpy.f
sladiv.$(OBJEXT): single/sladiv.f
slaexc.$(OBJEXT): single/slaexc.f
slahqr.$(OBJEXT): single/slahqr.f
slahrd.$(OBJEXT): single/slahrd.f
slaic1.$(OBJEXT): single/slaic1.f
slaln2.$(OBJEXT): single/slaln2.f
slamch.$(OBJEXT): single/slamch.f
slange.$(OBJEXT): single/slange.f
slanhs.$(OBJEXT): single/slanhs.f
slantr.$(OBJEXT): single/slantr.f
slanv2.$(OBJEXT): single/slanv2.f
slapy2.$(OBJEXT): single/slapy2.f
slapy3.$(OBJEXT): single/slapy3.f
slaqge.$(OBJEXT): single/slaqge.f
slaqp2.$(OBJEXT): single/slaqp2.f
slaqps.$(OBJEXT): single/slaqps.f
slaqtr.$(OBJEXT): single/slaqtr.f
slarfb.$(OBJEXT): single/slarfb.f
slarf.$(OBJEXT): single/slarf.f
slarfg.$(OBJEXT): single/slarfg.f
slarft.$(OBJEXT): single/slarft.f
slarfx.$(OBJEXT): single/slarfx.f
slartg.$(OBJEXT): single/slartg.f
slarzb.$(OBJEXT): single/slarzb.f
slarz.$(OBJEXT): single/slarz.f
slarzt.$(OBJEXT): single/slarzt.f
slascl.$(OBJEXT): single/slascl.f
slaset.$(OBJEXT): single/slaset.f
slassq.$(OBJEXT): single/slassq.f
slaswp.$(OBJEXT): single/slaswp.f
slasy2.$(OBJEXT): single/slasy2.f
slatrs.$(OBJEXT): single/slatrs.f
slatrz.$(OBJEXT): single/slatrz.f
sorg2r.$(OBJEXT): single/sorg2r.f
sorghr.$(OBJEXT): single/sorghr.f
sorgqr.$(OBJEXT): single/sorgqr.f
sorm2r.$(OBJEXT): single/sorm2r.f
sormqr.$(OBJEXT): single/sormqr.f
sormr3.$(OBJEXT): single/sormr3.f
sormrz.$(OBJEXT): single/sormrz.f
srscl.$(OBJEXT): single/srscl.f
strevc.$(OBJEXT): single/strevc.f
strexc.$(OBJEXT): single/strexc.f
strsna.$(OBJEXT): single/strsna.f
stzrzf.$(OBJEXT): single/stzrzf.f
icmax1.$(OBJEXT): util/icmax1.f
ieeeck.$(OBJEXT): util/ieeeck.f
ilaenv.$(OBJEXT): util/ilaenv.f
izmax1.$(OBJEXT): util/izmax1.f
libMiniLAPACK.a: $(libMiniLAPACK_a_OBJECTS) $(libMiniLAPACK_a_DEPENDENCIES) 
	-rm -f libMiniLAPACK.a
	$(libMiniLAPACK_a_AR) libMiniLAPACK.a $(libMiniLAPACK_a_OBJECTS) $(libMiniLAPACK_a_LIBADD)
	$(RANLIB) libMiniLAPACK.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

.f.o:
	$(F77COMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.f.obj:
	$(F77COMPILE) -c -o $@ `cygpath -w $<`

zdrscl.o: complex16/zdrscl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zdrscl.o `test -f 'complex16/zdrscl.f' || echo '$(srcdir)/'`complex16/zdrscl.f

zdrscl.obj: complex16/zdrscl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zdrscl.obj `cygpath -w complex16/zdrscl.f`

zgebak.o: complex16/zgebak.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgebak.o `test -f 'complex16/zgebak.f' || echo '$(srcdir)/'`complex16/zgebak.f

zgebak.obj: complex16/zgebak.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgebak.obj `cygpath -w complex16/zgebak.f`

zgebal.o: complex16/zgebal.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgebal.o `test -f 'complex16/zgebal.f' || echo '$(srcdir)/'`complex16/zgebal.f

zgebal.obj: complex16/zgebal.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgebal.obj `cygpath -w complex16/zgebal.f`

zgecon.o: complex16/zgecon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgecon.o `test -f 'complex16/zgecon.f' || echo '$(srcdir)/'`complex16/zgecon.f

zgecon.obj: complex16/zgecon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgecon.obj `cygpath -w complex16/zgecon.f`

zgeequ.o: complex16/zgeequ.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgeequ.o `test -f 'complex16/zgeequ.f' || echo '$(srcdir)/'`complex16/zgeequ.f

zgeequ.obj: complex16/zgeequ.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgeequ.obj `cygpath -w complex16/zgeequ.f`

zgeevx.o: complex16/zgeevx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgeevx.o `test -f 'complex16/zgeevx.f' || echo '$(srcdir)/'`complex16/zgeevx.f

zgeevx.obj: complex16/zgeevx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgeevx.obj `cygpath -w complex16/zgeevx.f`

zgehd2.o: complex16/zgehd2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgehd2.o `test -f 'complex16/zgehd2.f' || echo '$(srcdir)/'`complex16/zgehd2.f

zgehd2.obj: complex16/zgehd2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgehd2.obj `cygpath -w complex16/zgehd2.f`

zgehrd.o: complex16/zgehrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgehrd.o `test -f 'complex16/zgehrd.f' || echo '$(srcdir)/'`complex16/zgehrd.f

zgehrd.obj: complex16/zgehrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgehrd.obj `cygpath -w complex16/zgehrd.f`

zgelsy.o: complex16/zgelsy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgelsy.o `test -f 'complex16/zgelsy.f' || echo '$(srcdir)/'`complex16/zgelsy.f

zgelsy.obj: complex16/zgelsy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgelsy.obj `cygpath -w complex16/zgelsy.f`

zgeqp3.o: complex16/zgeqp3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgeqp3.o `test -f 'complex16/zgeqp3.f' || echo '$(srcdir)/'`complex16/zgeqp3.f

zgeqp3.obj: complex16/zgeqp3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgeqp3.obj `cygpath -w complex16/zgeqp3.f`

zgeqr2.o: complex16/zgeqr2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgeqr2.o `test -f 'complex16/zgeqr2.f' || echo '$(srcdir)/'`complex16/zgeqr2.f

zgeqr2.obj: complex16/zgeqr2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgeqr2.obj `cygpath -w complex16/zgeqr2.f`

zgeqrf.o: complex16/zgeqrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgeqrf.o `test -f 'complex16/zgeqrf.f' || echo '$(srcdir)/'`complex16/zgeqrf.f

zgeqrf.obj: complex16/zgeqrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgeqrf.obj `cygpath -w complex16/zgeqrf.f`

zgerfs.o: complex16/zgerfs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgerfs.o `test -f 'complex16/zgerfs.f' || echo '$(srcdir)/'`complex16/zgerfs.f

zgerfs.obj: complex16/zgerfs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgerfs.obj `cygpath -w complex16/zgerfs.f`

zgesvx.o: complex16/zgesvx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgesvx.o `test -f 'complex16/zgesvx.f' || echo '$(srcdir)/'`complex16/zgesvx.f

zgesvx.obj: complex16/zgesvx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgesvx.obj `cygpath -w complex16/zgesvx.f`

zgetf2.o: complex16/zgetf2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgetf2.o `test -f 'complex16/zgetf2.f' || echo '$(srcdir)/'`complex16/zgetf2.f

zgetf2.obj: complex16/zgetf2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgetf2.obj `cygpath -w complex16/zgetf2.f`

zgetrf.o: complex16/zgetrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgetrf.o `test -f 'complex16/zgetrf.f' || echo '$(srcdir)/'`complex16/zgetrf.f

zgetrf.obj: complex16/zgetrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgetrf.obj `cygpath -w complex16/zgetrf.f`

zgetrs.o: complex16/zgetrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgetrs.o `test -f 'complex16/zgetrs.f' || echo '$(srcdir)/'`complex16/zgetrs.f

zgetrs.obj: complex16/zgetrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zgetrs.obj `cygpath -w complex16/zgetrs.f`

zhseqr.o: complex16/zhseqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zhseqr.o `test -f 'complex16/zhseqr.f' || echo '$(srcdir)/'`complex16/zhseqr.f

zhseqr.obj: complex16/zhseqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zhseqr.obj `cygpath -w complex16/zhseqr.f`

zlacgv.o: complex16/zlacgv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlacgv.o `test -f 'complex16/zlacgv.f' || echo '$(srcdir)/'`complex16/zlacgv.f

zlacgv.obj: complex16/zlacgv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlacgv.obj `cygpath -w complex16/zlacgv.f`

zlacon.o: complex16/zlacon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlacon.o `test -f 'complex16/zlacon.f' || echo '$(srcdir)/'`complex16/zlacon.f

zlacon.obj: complex16/zlacon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlacon.obj `cygpath -w complex16/zlacon.f`

zlacpy.o: complex16/zlacpy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlacpy.o `test -f 'complex16/zlacpy.f' || echo '$(srcdir)/'`complex16/zlacpy.f

zlacpy.obj: complex16/zlacpy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlacpy.obj `cygpath -w complex16/zlacpy.f`

zladiv.o: complex16/zladiv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zladiv.o `test -f 'complex16/zladiv.f' || echo '$(srcdir)/'`complex16/zladiv.f

zladiv.obj: complex16/zladiv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zladiv.obj `cygpath -w complex16/zladiv.f`

zlahqr.o: complex16/zlahqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlahqr.o `test -f 'complex16/zlahqr.f' || echo '$(srcdir)/'`complex16/zlahqr.f

zlahqr.obj: complex16/zlahqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlahqr.obj `cygpath -w complex16/zlahqr.f`

zlahrd.o: complex16/zlahrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlahrd.o `test -f 'complex16/zlahrd.f' || echo '$(srcdir)/'`complex16/zlahrd.f

zlahrd.obj: complex16/zlahrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlahrd.obj `cygpath -w complex16/zlahrd.f`

zlaic1.o: complex16/zlaic1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaic1.o `test -f 'complex16/zlaic1.f' || echo '$(srcdir)/'`complex16/zlaic1.f

zlaic1.obj: complex16/zlaic1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaic1.obj `cygpath -w complex16/zlaic1.f`

zlange.o: complex16/zlange.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlange.o `test -f 'complex16/zlange.f' || echo '$(srcdir)/'`complex16/zlange.f

zlange.obj: complex16/zlange.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlange.obj `cygpath -w complex16/zlange.f`

zlanhs.o: complex16/zlanhs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlanhs.o `test -f 'complex16/zlanhs.f' || echo '$(srcdir)/'`complex16/zlanhs.f

zlanhs.obj: complex16/zlanhs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlanhs.obj `cygpath -w complex16/zlanhs.f`

zlantr.o: complex16/zlantr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlantr.o `test -f 'complex16/zlantr.f' || echo '$(srcdir)/'`complex16/zlantr.f

zlantr.obj: complex16/zlantr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlantr.obj `cygpath -w complex16/zlantr.f`

zlaqge.o: complex16/zlaqge.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaqge.o `test -f 'complex16/zlaqge.f' || echo '$(srcdir)/'`complex16/zlaqge.f

zlaqge.obj: complex16/zlaqge.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaqge.obj `cygpath -w complex16/zlaqge.f`

zlaqp2.o: complex16/zlaqp2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaqp2.o `test -f 'complex16/zlaqp2.f' || echo '$(srcdir)/'`complex16/zlaqp2.f

zlaqp2.obj: complex16/zlaqp2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaqp2.obj `cygpath -w complex16/zlaqp2.f`

zlaqps.o: complex16/zlaqps.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaqps.o `test -f 'complex16/zlaqps.f' || echo '$(srcdir)/'`complex16/zlaqps.f

zlaqps.obj: complex16/zlaqps.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaqps.obj `cygpath -w complex16/zlaqps.f`

zlarfb.o: complex16/zlarfb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarfb.o `test -f 'complex16/zlarfb.f' || echo '$(srcdir)/'`complex16/zlarfb.f

zlarfb.obj: complex16/zlarfb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarfb.obj `cygpath -w complex16/zlarfb.f`

zlarf.o: complex16/zlarf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarf.o `test -f 'complex16/zlarf.f' || echo '$(srcdir)/'`complex16/zlarf.f

zlarf.obj: complex16/zlarf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarf.obj `cygpath -w complex16/zlarf.f`

zlarfg.o: complex16/zlarfg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarfg.o `test -f 'complex16/zlarfg.f' || echo '$(srcdir)/'`complex16/zlarfg.f

zlarfg.obj: complex16/zlarfg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarfg.obj `cygpath -w complex16/zlarfg.f`

zlarft.o: complex16/zlarft.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarft.o `test -f 'complex16/zlarft.f' || echo '$(srcdir)/'`complex16/zlarft.f

zlarft.obj: complex16/zlarft.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarft.obj `cygpath -w complex16/zlarft.f`

zlarfx.o: complex16/zlarfx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarfx.o `test -f 'complex16/zlarfx.f' || echo '$(srcdir)/'`complex16/zlarfx.f

zlarfx.obj: complex16/zlarfx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarfx.obj `cygpath -w complex16/zlarfx.f`

zlartg.o: complex16/zlartg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlartg.o `test -f 'complex16/zlartg.f' || echo '$(srcdir)/'`complex16/zlartg.f

zlartg.obj: complex16/zlartg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlartg.obj `cygpath -w complex16/zlartg.f`

zlarzb.o: complex16/zlarzb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarzb.o `test -f 'complex16/zlarzb.f' || echo '$(srcdir)/'`complex16/zlarzb.f

zlarzb.obj: complex16/zlarzb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarzb.obj `cygpath -w complex16/zlarzb.f`

zlarz.o: complex16/zlarz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarz.o `test -f 'complex16/zlarz.f' || echo '$(srcdir)/'`complex16/zlarz.f

zlarz.obj: complex16/zlarz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarz.obj `cygpath -w complex16/zlarz.f`

zlarzt.o: complex16/zlarzt.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarzt.o `test -f 'complex16/zlarzt.f' || echo '$(srcdir)/'`complex16/zlarzt.f

zlarzt.obj: complex16/zlarzt.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlarzt.obj `cygpath -w complex16/zlarzt.f`

zlascl.o: complex16/zlascl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlascl.o `test -f 'complex16/zlascl.f' || echo '$(srcdir)/'`complex16/zlascl.f

zlascl.obj: complex16/zlascl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlascl.obj `cygpath -w complex16/zlascl.f`

zlaset.o: complex16/zlaset.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaset.o `test -f 'complex16/zlaset.f' || echo '$(srcdir)/'`complex16/zlaset.f

zlaset.obj: complex16/zlaset.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaset.obj `cygpath -w complex16/zlaset.f`

zlassq.o: complex16/zlassq.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlassq.o `test -f 'complex16/zlassq.f' || echo '$(srcdir)/'`complex16/zlassq.f

zlassq.obj: complex16/zlassq.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlassq.obj `cygpath -w complex16/zlassq.f`

zlaswp.o: complex16/zlaswp.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaswp.o `test -f 'complex16/zlaswp.f' || echo '$(srcdir)/'`complex16/zlaswp.f

zlaswp.obj: complex16/zlaswp.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlaswp.obj `cygpath -w complex16/zlaswp.f`

zlatrs.o: complex16/zlatrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlatrs.o `test -f 'complex16/zlatrs.f' || echo '$(srcdir)/'`complex16/zlatrs.f

zlatrs.obj: complex16/zlatrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlatrs.obj `cygpath -w complex16/zlatrs.f`

zlatrz.o: complex16/zlatrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlatrz.o `test -f 'complex16/zlatrz.f' || echo '$(srcdir)/'`complex16/zlatrz.f

zlatrz.obj: complex16/zlatrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zlatrz.obj `cygpath -w complex16/zlatrz.f`

zrot.o: complex16/zrot.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zrot.o `test -f 'complex16/zrot.f' || echo '$(srcdir)/'`complex16/zrot.f

zrot.obj: complex16/zrot.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zrot.obj `cygpath -w complex16/zrot.f`

ztrevc.o: complex16/ztrevc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ztrevc.o `test -f 'complex16/ztrevc.f' || echo '$(srcdir)/'`complex16/ztrevc.f

ztrevc.obj: complex16/ztrevc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ztrevc.obj `cygpath -w complex16/ztrevc.f`

ztrexc.o: complex16/ztrexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ztrexc.o `test -f 'complex16/ztrexc.f' || echo '$(srcdir)/'`complex16/ztrexc.f

ztrexc.obj: complex16/ztrexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ztrexc.obj `cygpath -w complex16/ztrexc.f`

ztrsna.o: complex16/ztrsna.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ztrsna.o `test -f 'complex16/ztrsna.f' || echo '$(srcdir)/'`complex16/ztrsna.f

ztrsna.obj: complex16/ztrsna.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ztrsna.obj `cygpath -w complex16/ztrsna.f`

ztzrzf.o: complex16/ztzrzf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ztzrzf.o `test -f 'complex16/ztzrzf.f' || echo '$(srcdir)/'`complex16/ztzrzf.f

ztzrzf.obj: complex16/ztzrzf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ztzrzf.obj `cygpath -w complex16/ztzrzf.f`

zung2r.o: complex16/zung2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zung2r.o `test -f 'complex16/zung2r.f' || echo '$(srcdir)/'`complex16/zung2r.f

zung2r.obj: complex16/zung2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zung2r.obj `cygpath -w complex16/zung2r.f`

zunghr.o: complex16/zunghr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zunghr.o `test -f 'complex16/zunghr.f' || echo '$(srcdir)/'`complex16/zunghr.f

zunghr.obj: complex16/zunghr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zunghr.obj `cygpath -w complex16/zunghr.f`

zungqr.o: complex16/zungqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zungqr.o `test -f 'complex16/zungqr.f' || echo '$(srcdir)/'`complex16/zungqr.f

zungqr.obj: complex16/zungqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zungqr.obj `cygpath -w complex16/zungqr.f`

zunm2r.o: complex16/zunm2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zunm2r.o `test -f 'complex16/zunm2r.f' || echo '$(srcdir)/'`complex16/zunm2r.f

zunm2r.obj: complex16/zunm2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zunm2r.obj `cygpath -w complex16/zunm2r.f`

zunmqr.o: complex16/zunmqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zunmqr.o `test -f 'complex16/zunmqr.f' || echo '$(srcdir)/'`complex16/zunmqr.f

zunmqr.obj: complex16/zunmqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zunmqr.obj `cygpath -w complex16/zunmqr.f`

zunmr3.o: complex16/zunmr3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zunmr3.o `test -f 'complex16/zunmr3.f' || echo '$(srcdir)/'`complex16/zunmr3.f

zunmr3.obj: complex16/zunmr3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zunmr3.obj `cygpath -w complex16/zunmr3.f`

zunmrz.o: complex16/zunmrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zunmrz.o `test -f 'complex16/zunmrz.f' || echo '$(srcdir)/'`complex16/zunmrz.f

zunmrz.obj: complex16/zunmrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o zunmrz.obj `cygpath -w complex16/zunmrz.f`

cgebak.o: complex/cgebak.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgebak.o `test -f 'complex/cgebak.f' || echo '$(srcdir)/'`complex/cgebak.f

cgebak.obj: complex/cgebak.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgebak.obj `cygpath -w complex/cgebak.f`

cgebal.o: complex/cgebal.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgebal.o `test -f 'complex/cgebal.f' || echo '$(srcdir)/'`complex/cgebal.f

cgebal.obj: complex/cgebal.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgebal.obj `cygpath -w complex/cgebal.f`

cgecon.o: complex/cgecon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgecon.o `test -f 'complex/cgecon.f' || echo '$(srcdir)/'`complex/cgecon.f

cgecon.obj: complex/cgecon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgecon.obj `cygpath -w complex/cgecon.f`

cgeequ.o: complex/cgeequ.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgeequ.o `test -f 'complex/cgeequ.f' || echo '$(srcdir)/'`complex/cgeequ.f

cgeequ.obj: complex/cgeequ.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgeequ.obj `cygpath -w complex/cgeequ.f`

cgeevx.o: complex/cgeevx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgeevx.o `test -f 'complex/cgeevx.f' || echo '$(srcdir)/'`complex/cgeevx.f

cgeevx.obj: complex/cgeevx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgeevx.obj `cygpath -w complex/cgeevx.f`

cgehd2.o: complex/cgehd2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgehd2.o `test -f 'complex/cgehd2.f' || echo '$(srcdir)/'`complex/cgehd2.f

cgehd2.obj: complex/cgehd2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgehd2.obj `cygpath -w complex/cgehd2.f`

cgehrd.o: complex/cgehrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgehrd.o `test -f 'complex/cgehrd.f' || echo '$(srcdir)/'`complex/cgehrd.f

cgehrd.obj: complex/cgehrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgehrd.obj `cygpath -w complex/cgehrd.f`

cgelsy.o: complex/cgelsy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgelsy.o `test -f 'complex/cgelsy.f' || echo '$(srcdir)/'`complex/cgelsy.f

cgelsy.obj: complex/cgelsy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgelsy.obj `cygpath -w complex/cgelsy.f`

cgeqp3.o: complex/cgeqp3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgeqp3.o `test -f 'complex/cgeqp3.f' || echo '$(srcdir)/'`complex/cgeqp3.f

cgeqp3.obj: complex/cgeqp3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgeqp3.obj `cygpath -w complex/cgeqp3.f`

cgeqr2.o: complex/cgeqr2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgeqr2.o `test -f 'complex/cgeqr2.f' || echo '$(srcdir)/'`complex/cgeqr2.f

cgeqr2.obj: complex/cgeqr2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgeqr2.obj `cygpath -w complex/cgeqr2.f`

cgeqrf.o: complex/cgeqrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgeqrf.o `test -f 'complex/cgeqrf.f' || echo '$(srcdir)/'`complex/cgeqrf.f

cgeqrf.obj: complex/cgeqrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgeqrf.obj `cygpath -w complex/cgeqrf.f`

cgerfs.o: complex/cgerfs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgerfs.o `test -f 'complex/cgerfs.f' || echo '$(srcdir)/'`complex/cgerfs.f

cgerfs.obj: complex/cgerfs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgerfs.obj `cygpath -w complex/cgerfs.f`

cgesvx.o: complex/cgesvx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgesvx.o `test -f 'complex/cgesvx.f' || echo '$(srcdir)/'`complex/cgesvx.f

cgesvx.obj: complex/cgesvx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgesvx.obj `cygpath -w complex/cgesvx.f`

cgetf2.o: complex/cgetf2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgetf2.o `test -f 'complex/cgetf2.f' || echo '$(srcdir)/'`complex/cgetf2.f

cgetf2.obj: complex/cgetf2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgetf2.obj `cygpath -w complex/cgetf2.f`

cgetrf.o: complex/cgetrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgetrf.o `test -f 'complex/cgetrf.f' || echo '$(srcdir)/'`complex/cgetrf.f

cgetrf.obj: complex/cgetrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgetrf.obj `cygpath -w complex/cgetrf.f`

cgetrs.o: complex/cgetrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgetrs.o `test -f 'complex/cgetrs.f' || echo '$(srcdir)/'`complex/cgetrs.f

cgetrs.obj: complex/cgetrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cgetrs.obj `cygpath -w complex/cgetrs.f`

chseqr.o: complex/chseqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o chseqr.o `test -f 'complex/chseqr.f' || echo '$(srcdir)/'`complex/chseqr.f

chseqr.obj: complex/chseqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o chseqr.obj `cygpath -w complex/chseqr.f`

clacgv.o: complex/clacgv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clacgv.o `test -f 'complex/clacgv.f' || echo '$(srcdir)/'`complex/clacgv.f

clacgv.obj: complex/clacgv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clacgv.obj `cygpath -w complex/clacgv.f`

clacon.o: complex/clacon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clacon.o `test -f 'complex/clacon.f' || echo '$(srcdir)/'`complex/clacon.f

clacon.obj: complex/clacon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clacon.obj `cygpath -w complex/clacon.f`

clacpy.o: complex/clacpy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clacpy.o `test -f 'complex/clacpy.f' || echo '$(srcdir)/'`complex/clacpy.f

clacpy.obj: complex/clacpy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clacpy.obj `cygpath -w complex/clacpy.f`

cladiv.o: complex/cladiv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cladiv.o `test -f 'complex/cladiv.f' || echo '$(srcdir)/'`complex/cladiv.f

cladiv.obj: complex/cladiv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cladiv.obj `cygpath -w complex/cladiv.f`

clahqr.o: complex/clahqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clahqr.o `test -f 'complex/clahqr.f' || echo '$(srcdir)/'`complex/clahqr.f

clahqr.obj: complex/clahqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clahqr.obj `cygpath -w complex/clahqr.f`

clahrd.o: complex/clahrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clahrd.o `test -f 'complex/clahrd.f' || echo '$(srcdir)/'`complex/clahrd.f

clahrd.obj: complex/clahrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clahrd.obj `cygpath -w complex/clahrd.f`

claic1.o: complex/claic1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claic1.o `test -f 'complex/claic1.f' || echo '$(srcdir)/'`complex/claic1.f

claic1.obj: complex/claic1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claic1.obj `cygpath -w complex/claic1.f`

clange.o: complex/clange.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clange.o `test -f 'complex/clange.f' || echo '$(srcdir)/'`complex/clange.f

clange.obj: complex/clange.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clange.obj `cygpath -w complex/clange.f`

clanhs.o: complex/clanhs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clanhs.o `test -f 'complex/clanhs.f' || echo '$(srcdir)/'`complex/clanhs.f

clanhs.obj: complex/clanhs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clanhs.obj `cygpath -w complex/clanhs.f`

clantr.o: complex/clantr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clantr.o `test -f 'complex/clantr.f' || echo '$(srcdir)/'`complex/clantr.f

clantr.obj: complex/clantr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clantr.obj `cygpath -w complex/clantr.f`

claqge.o: complex/claqge.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claqge.o `test -f 'complex/claqge.f' || echo '$(srcdir)/'`complex/claqge.f

claqge.obj: complex/claqge.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claqge.obj `cygpath -w complex/claqge.f`

claqp2.o: complex/claqp2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claqp2.o `test -f 'complex/claqp2.f' || echo '$(srcdir)/'`complex/claqp2.f

claqp2.obj: complex/claqp2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claqp2.obj `cygpath -w complex/claqp2.f`

claqps.o: complex/claqps.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claqps.o `test -f 'complex/claqps.f' || echo '$(srcdir)/'`complex/claqps.f

claqps.obj: complex/claqps.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claqps.obj `cygpath -w complex/claqps.f`

clarfb.o: complex/clarfb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarfb.o `test -f 'complex/clarfb.f' || echo '$(srcdir)/'`complex/clarfb.f

clarfb.obj: complex/clarfb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarfb.obj `cygpath -w complex/clarfb.f`

clarf.o: complex/clarf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarf.o `test -f 'complex/clarf.f' || echo '$(srcdir)/'`complex/clarf.f

clarf.obj: complex/clarf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarf.obj `cygpath -w complex/clarf.f`

clarfg.o: complex/clarfg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarfg.o `test -f 'complex/clarfg.f' || echo '$(srcdir)/'`complex/clarfg.f

clarfg.obj: complex/clarfg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarfg.obj `cygpath -w complex/clarfg.f`

clarft.o: complex/clarft.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarft.o `test -f 'complex/clarft.f' || echo '$(srcdir)/'`complex/clarft.f

clarft.obj: complex/clarft.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarft.obj `cygpath -w complex/clarft.f`

clarfx.o: complex/clarfx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarfx.o `test -f 'complex/clarfx.f' || echo '$(srcdir)/'`complex/clarfx.f

clarfx.obj: complex/clarfx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarfx.obj `cygpath -w complex/clarfx.f`

clartg.o: complex/clartg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clartg.o `test -f 'complex/clartg.f' || echo '$(srcdir)/'`complex/clartg.f

clartg.obj: complex/clartg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clartg.obj `cygpath -w complex/clartg.f`

clarzb.o: complex/clarzb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarzb.o `test -f 'complex/clarzb.f' || echo '$(srcdir)/'`complex/clarzb.f

clarzb.obj: complex/clarzb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarzb.obj `cygpath -w complex/clarzb.f`

clarz.o: complex/clarz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarz.o `test -f 'complex/clarz.f' || echo '$(srcdir)/'`complex/clarz.f

clarz.obj: complex/clarz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarz.obj `cygpath -w complex/clarz.f`

clarzt.o: complex/clarzt.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarzt.o `test -f 'complex/clarzt.f' || echo '$(srcdir)/'`complex/clarzt.f

clarzt.obj: complex/clarzt.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clarzt.obj `cygpath -w complex/clarzt.f`

clascl.o: complex/clascl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clascl.o `test -f 'complex/clascl.f' || echo '$(srcdir)/'`complex/clascl.f

clascl.obj: complex/clascl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clascl.obj `cygpath -w complex/clascl.f`

claset.o: complex/claset.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claset.o `test -f 'complex/claset.f' || echo '$(srcdir)/'`complex/claset.f

claset.obj: complex/claset.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claset.obj `cygpath -w complex/claset.f`

classq.o: complex/classq.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o classq.o `test -f 'complex/classq.f' || echo '$(srcdir)/'`complex/classq.f

classq.obj: complex/classq.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o classq.obj `cygpath -w complex/classq.f`

claswp.o: complex/claswp.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claswp.o `test -f 'complex/claswp.f' || echo '$(srcdir)/'`complex/claswp.f

claswp.obj: complex/claswp.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o claswp.obj `cygpath -w complex/claswp.f`

clatrs.o: complex/clatrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clatrs.o `test -f 'complex/clatrs.f' || echo '$(srcdir)/'`complex/clatrs.f

clatrs.obj: complex/clatrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clatrs.obj `cygpath -w complex/clatrs.f`

clatrz.o: complex/clatrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clatrz.o `test -f 'complex/clatrz.f' || echo '$(srcdir)/'`complex/clatrz.f

clatrz.obj: complex/clatrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o clatrz.obj `cygpath -w complex/clatrz.f`

crot.o: complex/crot.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o crot.o `test -f 'complex/crot.f' || echo '$(srcdir)/'`complex/crot.f

crot.obj: complex/crot.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o crot.obj `cygpath -w complex/crot.f`

csrscl.o: complex/csrscl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o csrscl.o `test -f 'complex/csrscl.f' || echo '$(srcdir)/'`complex/csrscl.f

csrscl.obj: complex/csrscl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o csrscl.obj `cygpath -w complex/csrscl.f`

ctrevc.o: complex/ctrevc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ctrevc.o `test -f 'complex/ctrevc.f' || echo '$(srcdir)/'`complex/ctrevc.f

ctrevc.obj: complex/ctrevc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ctrevc.obj `cygpath -w complex/ctrevc.f`

ctrexc.o: complex/ctrexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ctrexc.o `test -f 'complex/ctrexc.f' || echo '$(srcdir)/'`complex/ctrexc.f

ctrexc.obj: complex/ctrexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ctrexc.obj `cygpath -w complex/ctrexc.f`

ctrsna.o: complex/ctrsna.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ctrsna.o `test -f 'complex/ctrsna.f' || echo '$(srcdir)/'`complex/ctrsna.f

ctrsna.obj: complex/ctrsna.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ctrsna.obj `cygpath -w complex/ctrsna.f`

ctzrzf.o: complex/ctzrzf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ctzrzf.o `test -f 'complex/ctzrzf.f' || echo '$(srcdir)/'`complex/ctzrzf.f

ctzrzf.obj: complex/ctzrzf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ctzrzf.obj `cygpath -w complex/ctzrzf.f`

cung2r.o: complex/cung2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cung2r.o `test -f 'complex/cung2r.f' || echo '$(srcdir)/'`complex/cung2r.f

cung2r.obj: complex/cung2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cung2r.obj `cygpath -w complex/cung2r.f`

cunghr.o: complex/cunghr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cunghr.o `test -f 'complex/cunghr.f' || echo '$(srcdir)/'`complex/cunghr.f

cunghr.obj: complex/cunghr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cunghr.obj `cygpath -w complex/cunghr.f`

cungqr.o: complex/cungqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cungqr.o `test -f 'complex/cungqr.f' || echo '$(srcdir)/'`complex/cungqr.f

cungqr.obj: complex/cungqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cungqr.obj `cygpath -w complex/cungqr.f`

cunm2r.o: complex/cunm2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cunm2r.o `test -f 'complex/cunm2r.f' || echo '$(srcdir)/'`complex/cunm2r.f

cunm2r.obj: complex/cunm2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cunm2r.obj `cygpath -w complex/cunm2r.f`

cunmqr.o: complex/cunmqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cunmqr.o `test -f 'complex/cunmqr.f' || echo '$(srcdir)/'`complex/cunmqr.f

cunmqr.obj: complex/cunmqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cunmqr.obj `cygpath -w complex/cunmqr.f`

cunmr3.o: complex/cunmr3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cunmr3.o `test -f 'complex/cunmr3.f' || echo '$(srcdir)/'`complex/cunmr3.f

cunmr3.obj: complex/cunmr3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cunmr3.obj `cygpath -w complex/cunmr3.f`

cunmrz.o: complex/cunmrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cunmrz.o `test -f 'complex/cunmrz.f' || echo '$(srcdir)/'`complex/cunmrz.f

cunmrz.obj: complex/cunmrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o cunmrz.obj `cygpath -w complex/cunmrz.f`

dgebak.o: double/dgebak.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgebak.o `test -f 'double/dgebak.f' || echo '$(srcdir)/'`double/dgebak.f

dgebak.obj: double/dgebak.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgebak.obj `cygpath -w double/dgebak.f`

dgebal.o: double/dgebal.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgebal.o `test -f 'double/dgebal.f' || echo '$(srcdir)/'`double/dgebal.f

dgebal.obj: double/dgebal.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgebal.obj `cygpath -w double/dgebal.f`

dgecon.o: double/dgecon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgecon.o `test -f 'double/dgecon.f' || echo '$(srcdir)/'`double/dgecon.f

dgecon.obj: double/dgecon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgecon.obj `cygpath -w double/dgecon.f`

dgeequ.o: double/dgeequ.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgeequ.o `test -f 'double/dgeequ.f' || echo '$(srcdir)/'`double/dgeequ.f

dgeequ.obj: double/dgeequ.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgeequ.obj `cygpath -w double/dgeequ.f`

dgeevx.o: double/dgeevx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgeevx.o `test -f 'double/dgeevx.f' || echo '$(srcdir)/'`double/dgeevx.f

dgeevx.obj: double/dgeevx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgeevx.obj `cygpath -w double/dgeevx.f`

dgehd2.o: double/dgehd2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgehd2.o `test -f 'double/dgehd2.f' || echo '$(srcdir)/'`double/dgehd2.f

dgehd2.obj: double/dgehd2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgehd2.obj `cygpath -w double/dgehd2.f`

dgehrd.o: double/dgehrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgehrd.o `test -f 'double/dgehrd.f' || echo '$(srcdir)/'`double/dgehrd.f

dgehrd.obj: double/dgehrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgehrd.obj `cygpath -w double/dgehrd.f`

dgelsy.o: double/dgelsy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgelsy.o `test -f 'double/dgelsy.f' || echo '$(srcdir)/'`double/dgelsy.f

dgelsy.obj: double/dgelsy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgelsy.obj `cygpath -w double/dgelsy.f`

dgeqp3.o: double/dgeqp3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgeqp3.o `test -f 'double/dgeqp3.f' || echo '$(srcdir)/'`double/dgeqp3.f

dgeqp3.obj: double/dgeqp3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgeqp3.obj `cygpath -w double/dgeqp3.f`

dgeqr2.o: double/dgeqr2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgeqr2.o `test -f 'double/dgeqr2.f' || echo '$(srcdir)/'`double/dgeqr2.f

dgeqr2.obj: double/dgeqr2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgeqr2.obj `cygpath -w double/dgeqr2.f`

dgeqrf.o: double/dgeqrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgeqrf.o `test -f 'double/dgeqrf.f' || echo '$(srcdir)/'`double/dgeqrf.f

dgeqrf.obj: double/dgeqrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgeqrf.obj `cygpath -w double/dgeqrf.f`

dgerfs.o: double/dgerfs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgerfs.o `test -f 'double/dgerfs.f' || echo '$(srcdir)/'`double/dgerfs.f

dgerfs.obj: double/dgerfs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgerfs.obj `cygpath -w double/dgerfs.f`

dgesvx.o: double/dgesvx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgesvx.o `test -f 'double/dgesvx.f' || echo '$(srcdir)/'`double/dgesvx.f

dgesvx.obj: double/dgesvx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgesvx.obj `cygpath -w double/dgesvx.f`

dgetf2.o: double/dgetf2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgetf2.o `test -f 'double/dgetf2.f' || echo '$(srcdir)/'`double/dgetf2.f

dgetf2.obj: double/dgetf2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgetf2.obj `cygpath -w double/dgetf2.f`

dgetrf.o: double/dgetrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgetrf.o `test -f 'double/dgetrf.f' || echo '$(srcdir)/'`double/dgetrf.f

dgetrf.obj: double/dgetrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgetrf.obj `cygpath -w double/dgetrf.f`

dgetrs.o: double/dgetrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgetrs.o `test -f 'double/dgetrs.f' || echo '$(srcdir)/'`double/dgetrs.f

dgetrs.obj: double/dgetrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dgetrs.obj `cygpath -w double/dgetrs.f`

dhseqr.o: double/dhseqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dhseqr.o `test -f 'double/dhseqr.f' || echo '$(srcdir)/'`double/dhseqr.f

dhseqr.obj: double/dhseqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dhseqr.obj `cygpath -w double/dhseqr.f`

dlabad.o: double/dlabad.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlabad.o `test -f 'double/dlabad.f' || echo '$(srcdir)/'`double/dlabad.f

dlabad.obj: double/dlabad.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlabad.obj `cygpath -w double/dlabad.f`

dlacon.o: double/dlacon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlacon.o `test -f 'double/dlacon.f' || echo '$(srcdir)/'`double/dlacon.f

dlacon.obj: double/dlacon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlacon.obj `cygpath -w double/dlacon.f`

dlacpy.o: double/dlacpy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlacpy.o `test -f 'double/dlacpy.f' || echo '$(srcdir)/'`double/dlacpy.f

dlacpy.obj: double/dlacpy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlacpy.obj `cygpath -w double/dlacpy.f`

dladiv.o: double/dladiv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dladiv.o `test -f 'double/dladiv.f' || echo '$(srcdir)/'`double/dladiv.f

dladiv.obj: double/dladiv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dladiv.obj `cygpath -w double/dladiv.f`

dlaexc.o: double/dlaexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaexc.o `test -f 'double/dlaexc.f' || echo '$(srcdir)/'`double/dlaexc.f

dlaexc.obj: double/dlaexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaexc.obj `cygpath -w double/dlaexc.f`

dlahqr.o: double/dlahqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlahqr.o `test -f 'double/dlahqr.f' || echo '$(srcdir)/'`double/dlahqr.f

dlahqr.obj: double/dlahqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlahqr.obj `cygpath -w double/dlahqr.f`

dlahrd.o: double/dlahrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlahrd.o `test -f 'double/dlahrd.f' || echo '$(srcdir)/'`double/dlahrd.f

dlahrd.obj: double/dlahrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlahrd.obj `cygpath -w double/dlahrd.f`

dlaic1.o: double/dlaic1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaic1.o `test -f 'double/dlaic1.f' || echo '$(srcdir)/'`double/dlaic1.f

dlaic1.obj: double/dlaic1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaic1.obj `cygpath -w double/dlaic1.f`

dlaln2.o: double/dlaln2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaln2.o `test -f 'double/dlaln2.f' || echo '$(srcdir)/'`double/dlaln2.f

dlaln2.obj: double/dlaln2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaln2.obj `cygpath -w double/dlaln2.f`

dlamch.o: double/dlamch.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlamch.o `test -f 'double/dlamch.f' || echo '$(srcdir)/'`double/dlamch.f

dlamch.obj: double/dlamch.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlamch.obj `cygpath -w double/dlamch.f`

dlange.o: double/dlange.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlange.o `test -f 'double/dlange.f' || echo '$(srcdir)/'`double/dlange.f

dlange.obj: double/dlange.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlange.obj `cygpath -w double/dlange.f`

dlanhs.o: double/dlanhs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlanhs.o `test -f 'double/dlanhs.f' || echo '$(srcdir)/'`double/dlanhs.f

dlanhs.obj: double/dlanhs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlanhs.obj `cygpath -w double/dlanhs.f`

dlantr.o: double/dlantr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlantr.o `test -f 'double/dlantr.f' || echo '$(srcdir)/'`double/dlantr.f

dlantr.obj: double/dlantr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlantr.obj `cygpath -w double/dlantr.f`

dlanv2.o: double/dlanv2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlanv2.o `test -f 'double/dlanv2.f' || echo '$(srcdir)/'`double/dlanv2.f

dlanv2.obj: double/dlanv2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlanv2.obj `cygpath -w double/dlanv2.f`

dlapy2.o: double/dlapy2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlapy2.o `test -f 'double/dlapy2.f' || echo '$(srcdir)/'`double/dlapy2.f

dlapy2.obj: double/dlapy2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlapy2.obj `cygpath -w double/dlapy2.f`

dlapy3.o: double/dlapy3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlapy3.o `test -f 'double/dlapy3.f' || echo '$(srcdir)/'`double/dlapy3.f

dlapy3.obj: double/dlapy3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlapy3.obj `cygpath -w double/dlapy3.f`

dlaqge.o: double/dlaqge.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaqge.o `test -f 'double/dlaqge.f' || echo '$(srcdir)/'`double/dlaqge.f

dlaqge.obj: double/dlaqge.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaqge.obj `cygpath -w double/dlaqge.f`

dlaqp2.o: double/dlaqp2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaqp2.o `test -f 'double/dlaqp2.f' || echo '$(srcdir)/'`double/dlaqp2.f

dlaqp2.obj: double/dlaqp2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaqp2.obj `cygpath -w double/dlaqp2.f`

dlaqps.o: double/dlaqps.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaqps.o `test -f 'double/dlaqps.f' || echo '$(srcdir)/'`double/dlaqps.f

dlaqps.obj: double/dlaqps.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaqps.obj `cygpath -w double/dlaqps.f`

dlaqtr.o: double/dlaqtr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaqtr.o `test -f 'double/dlaqtr.f' || echo '$(srcdir)/'`double/dlaqtr.f

dlaqtr.obj: double/dlaqtr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaqtr.obj `cygpath -w double/dlaqtr.f`

dlarfb.o: double/dlarfb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarfb.o `test -f 'double/dlarfb.f' || echo '$(srcdir)/'`double/dlarfb.f

dlarfb.obj: double/dlarfb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarfb.obj `cygpath -w double/dlarfb.f`

dlarf.o: double/dlarf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarf.o `test -f 'double/dlarf.f' || echo '$(srcdir)/'`double/dlarf.f

dlarf.obj: double/dlarf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarf.obj `cygpath -w double/dlarf.f`

dlarfg.o: double/dlarfg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarfg.o `test -f 'double/dlarfg.f' || echo '$(srcdir)/'`double/dlarfg.f

dlarfg.obj: double/dlarfg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarfg.obj `cygpath -w double/dlarfg.f`

dlarft.o: double/dlarft.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarft.o `test -f 'double/dlarft.f' || echo '$(srcdir)/'`double/dlarft.f

dlarft.obj: double/dlarft.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarft.obj `cygpath -w double/dlarft.f`

dlarfx.o: double/dlarfx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarfx.o `test -f 'double/dlarfx.f' || echo '$(srcdir)/'`double/dlarfx.f

dlarfx.obj: double/dlarfx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarfx.obj `cygpath -w double/dlarfx.f`

dlartg.o: double/dlartg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlartg.o `test -f 'double/dlartg.f' || echo '$(srcdir)/'`double/dlartg.f

dlartg.obj: double/dlartg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlartg.obj `cygpath -w double/dlartg.f`

dlarzb.o: double/dlarzb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarzb.o `test -f 'double/dlarzb.f' || echo '$(srcdir)/'`double/dlarzb.f

dlarzb.obj: double/dlarzb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarzb.obj `cygpath -w double/dlarzb.f`

dlarz.o: double/dlarz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarz.o `test -f 'double/dlarz.f' || echo '$(srcdir)/'`double/dlarz.f

dlarz.obj: double/dlarz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarz.obj `cygpath -w double/dlarz.f`

dlarzt.o: double/dlarzt.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarzt.o `test -f 'double/dlarzt.f' || echo '$(srcdir)/'`double/dlarzt.f

dlarzt.obj: double/dlarzt.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlarzt.obj `cygpath -w double/dlarzt.f`

dlascl.o: double/dlascl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlascl.o `test -f 'double/dlascl.f' || echo '$(srcdir)/'`double/dlascl.f

dlascl.obj: double/dlascl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlascl.obj `cygpath -w double/dlascl.f`

dlaset.o: double/dlaset.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaset.o `test -f 'double/dlaset.f' || echo '$(srcdir)/'`double/dlaset.f

dlaset.obj: double/dlaset.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaset.obj `cygpath -w double/dlaset.f`

dlassq.o: double/dlassq.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlassq.o `test -f 'double/dlassq.f' || echo '$(srcdir)/'`double/dlassq.f

dlassq.obj: double/dlassq.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlassq.obj `cygpath -w double/dlassq.f`

dlaswp.o: double/dlaswp.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaswp.o `test -f 'double/dlaswp.f' || echo '$(srcdir)/'`double/dlaswp.f

dlaswp.obj: double/dlaswp.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlaswp.obj `cygpath -w double/dlaswp.f`

dlasy2.o: double/dlasy2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlasy2.o `test -f 'double/dlasy2.f' || echo '$(srcdir)/'`double/dlasy2.f

dlasy2.obj: double/dlasy2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlasy2.obj `cygpath -w double/dlasy2.f`

dlatrs.o: double/dlatrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlatrs.o `test -f 'double/dlatrs.f' || echo '$(srcdir)/'`double/dlatrs.f

dlatrs.obj: double/dlatrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlatrs.obj `cygpath -w double/dlatrs.f`

dlatrz.o: double/dlatrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlatrz.o `test -f 'double/dlatrz.f' || echo '$(srcdir)/'`double/dlatrz.f

dlatrz.obj: double/dlatrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dlatrz.obj `cygpath -w double/dlatrz.f`

dorg2r.o: double/dorg2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dorg2r.o `test -f 'double/dorg2r.f' || echo '$(srcdir)/'`double/dorg2r.f

dorg2r.obj: double/dorg2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dorg2r.obj `cygpath -w double/dorg2r.f`

dorghr.o: double/dorghr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dorghr.o `test -f 'double/dorghr.f' || echo '$(srcdir)/'`double/dorghr.f

dorghr.obj: double/dorghr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dorghr.obj `cygpath -w double/dorghr.f`

dorgqr.o: double/dorgqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dorgqr.o `test -f 'double/dorgqr.f' || echo '$(srcdir)/'`double/dorgqr.f

dorgqr.obj: double/dorgqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dorgqr.obj `cygpath -w double/dorgqr.f`

dorm2r.o: double/dorm2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dorm2r.o `test -f 'double/dorm2r.f' || echo '$(srcdir)/'`double/dorm2r.f

dorm2r.obj: double/dorm2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dorm2r.obj `cygpath -w double/dorm2r.f`

dormqr.o: double/dormqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dormqr.o `test -f 'double/dormqr.f' || echo '$(srcdir)/'`double/dormqr.f

dormqr.obj: double/dormqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dormqr.obj `cygpath -w double/dormqr.f`

dormr3.o: double/dormr3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dormr3.o `test -f 'double/dormr3.f' || echo '$(srcdir)/'`double/dormr3.f

dormr3.obj: double/dormr3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dormr3.obj `cygpath -w double/dormr3.f`

dormrz.o: double/dormrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dormrz.o `test -f 'double/dormrz.f' || echo '$(srcdir)/'`double/dormrz.f

dormrz.obj: double/dormrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dormrz.obj `cygpath -w double/dormrz.f`

drscl.o: double/drscl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o drscl.o `test -f 'double/drscl.f' || echo '$(srcdir)/'`double/drscl.f

drscl.obj: double/drscl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o drscl.obj `cygpath -w double/drscl.f`

dtrevc.o: double/dtrevc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dtrevc.o `test -f 'double/dtrevc.f' || echo '$(srcdir)/'`double/dtrevc.f

dtrevc.obj: double/dtrevc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dtrevc.obj `cygpath -w double/dtrevc.f`

dtrexc.o: double/dtrexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dtrexc.o `test -f 'double/dtrexc.f' || echo '$(srcdir)/'`double/dtrexc.f

dtrexc.obj: double/dtrexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dtrexc.obj `cygpath -w double/dtrexc.f`

dtrsna.o: double/dtrsna.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dtrsna.o `test -f 'double/dtrsna.f' || echo '$(srcdir)/'`double/dtrsna.f

dtrsna.obj: double/dtrsna.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dtrsna.obj `cygpath -w double/dtrsna.f`

dtzrzf.o: double/dtzrzf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dtzrzf.o `test -f 'double/dtzrzf.f' || echo '$(srcdir)/'`double/dtzrzf.f

dtzrzf.obj: double/dtzrzf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dtzrzf.obj `cygpath -w double/dtzrzf.f`

dzsum1.o: double/dzsum1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dzsum1.o `test -f 'double/dzsum1.f' || echo '$(srcdir)/'`double/dzsum1.f

dzsum1.obj: double/dzsum1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o dzsum1.obj `cygpath -w double/dzsum1.f`

scsum1.o: single/scsum1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o scsum1.o `test -f 'single/scsum1.f' || echo '$(srcdir)/'`single/scsum1.f

scsum1.obj: single/scsum1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o scsum1.obj `cygpath -w single/scsum1.f`

sgebak.o: single/sgebak.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgebak.o `test -f 'single/sgebak.f' || echo '$(srcdir)/'`single/sgebak.f

sgebak.obj: single/sgebak.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgebak.obj `cygpath -w single/sgebak.f`

sgebal.o: single/sgebal.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgebal.o `test -f 'single/sgebal.f' || echo '$(srcdir)/'`single/sgebal.f

sgebal.obj: single/sgebal.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgebal.obj `cygpath -w single/sgebal.f`

sgecon.o: single/sgecon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgecon.o `test -f 'single/sgecon.f' || echo '$(srcdir)/'`single/sgecon.f

sgecon.obj: single/sgecon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgecon.obj `cygpath -w single/sgecon.f`

sgeequ.o: single/sgeequ.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgeequ.o `test -f 'single/sgeequ.f' || echo '$(srcdir)/'`single/sgeequ.f

sgeequ.obj: single/sgeequ.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgeequ.obj `cygpath -w single/sgeequ.f`

sgeevx.o: single/sgeevx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgeevx.o `test -f 'single/sgeevx.f' || echo '$(srcdir)/'`single/sgeevx.f

sgeevx.obj: single/sgeevx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgeevx.obj `cygpath -w single/sgeevx.f`

sgehd2.o: single/sgehd2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgehd2.o `test -f 'single/sgehd2.f' || echo '$(srcdir)/'`single/sgehd2.f

sgehd2.obj: single/sgehd2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgehd2.obj `cygpath -w single/sgehd2.f`

sgehrd.o: single/sgehrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgehrd.o `test -f 'single/sgehrd.f' || echo '$(srcdir)/'`single/sgehrd.f

sgehrd.obj: single/sgehrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgehrd.obj `cygpath -w single/sgehrd.f`

sgelsy.o: single/sgelsy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgelsy.o `test -f 'single/sgelsy.f' || echo '$(srcdir)/'`single/sgelsy.f

sgelsy.obj: single/sgelsy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgelsy.obj `cygpath -w single/sgelsy.f`

sgeqp3.o: single/sgeqp3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgeqp3.o `test -f 'single/sgeqp3.f' || echo '$(srcdir)/'`single/sgeqp3.f

sgeqp3.obj: single/sgeqp3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgeqp3.obj `cygpath -w single/sgeqp3.f`

sgeqr2.o: single/sgeqr2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgeqr2.o `test -f 'single/sgeqr2.f' || echo '$(srcdir)/'`single/sgeqr2.f

sgeqr2.obj: single/sgeqr2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgeqr2.obj `cygpath -w single/sgeqr2.f`

sgeqrf.o: single/sgeqrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgeqrf.o `test -f 'single/sgeqrf.f' || echo '$(srcdir)/'`single/sgeqrf.f

sgeqrf.obj: single/sgeqrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgeqrf.obj `cygpath -w single/sgeqrf.f`

sgerfs.o: single/sgerfs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgerfs.o `test -f 'single/sgerfs.f' || echo '$(srcdir)/'`single/sgerfs.f

sgerfs.obj: single/sgerfs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgerfs.obj `cygpath -w single/sgerfs.f`

sgesvx.o: single/sgesvx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgesvx.o `test -f 'single/sgesvx.f' || echo '$(srcdir)/'`single/sgesvx.f

sgesvx.obj: single/sgesvx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgesvx.obj `cygpath -w single/sgesvx.f`

sgetf2.o: single/sgetf2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgetf2.o `test -f 'single/sgetf2.f' || echo '$(srcdir)/'`single/sgetf2.f

sgetf2.obj: single/sgetf2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgetf2.obj `cygpath -w single/sgetf2.f`

sgetrf.o: single/sgetrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgetrf.o `test -f 'single/sgetrf.f' || echo '$(srcdir)/'`single/sgetrf.f

sgetrf.obj: single/sgetrf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgetrf.obj `cygpath -w single/sgetrf.f`

sgetrs.o: single/sgetrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgetrs.o `test -f 'single/sgetrs.f' || echo '$(srcdir)/'`single/sgetrs.f

sgetrs.obj: single/sgetrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sgetrs.obj `cygpath -w single/sgetrs.f`

shseqr.o: single/shseqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o shseqr.o `test -f 'single/shseqr.f' || echo '$(srcdir)/'`single/shseqr.f

shseqr.obj: single/shseqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o shseqr.obj `cygpath -w single/shseqr.f`

slabad.o: single/slabad.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slabad.o `test -f 'single/slabad.f' || echo '$(srcdir)/'`single/slabad.f

slabad.obj: single/slabad.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slabad.obj `cygpath -w single/slabad.f`

slacon.o: single/slacon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slacon.o `test -f 'single/slacon.f' || echo '$(srcdir)/'`single/slacon.f

slacon.obj: single/slacon.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slacon.obj `cygpath -w single/slacon.f`

slacpy.o: single/slacpy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slacpy.o `test -f 'single/slacpy.f' || echo '$(srcdir)/'`single/slacpy.f

slacpy.obj: single/slacpy.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slacpy.obj `cygpath -w single/slacpy.f`

sladiv.o: single/sladiv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sladiv.o `test -f 'single/sladiv.f' || echo '$(srcdir)/'`single/sladiv.f

sladiv.obj: single/sladiv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sladiv.obj `cygpath -w single/sladiv.f`

slaexc.o: single/slaexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaexc.o `test -f 'single/slaexc.f' || echo '$(srcdir)/'`single/slaexc.f

slaexc.obj: single/slaexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaexc.obj `cygpath -w single/slaexc.f`

slahqr.o: single/slahqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slahqr.o `test -f 'single/slahqr.f' || echo '$(srcdir)/'`single/slahqr.f

slahqr.obj: single/slahqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slahqr.obj `cygpath -w single/slahqr.f`

slahrd.o: single/slahrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slahrd.o `test -f 'single/slahrd.f' || echo '$(srcdir)/'`single/slahrd.f

slahrd.obj: single/slahrd.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slahrd.obj `cygpath -w single/slahrd.f`

slaic1.o: single/slaic1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaic1.o `test -f 'single/slaic1.f' || echo '$(srcdir)/'`single/slaic1.f

slaic1.obj: single/slaic1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaic1.obj `cygpath -w single/slaic1.f`

slaln2.o: single/slaln2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaln2.o `test -f 'single/slaln2.f' || echo '$(srcdir)/'`single/slaln2.f

slaln2.obj: single/slaln2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaln2.obj `cygpath -w single/slaln2.f`

slamch.o: single/slamch.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slamch.o `test -f 'single/slamch.f' || echo '$(srcdir)/'`single/slamch.f

slamch.obj: single/slamch.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slamch.obj `cygpath -w single/slamch.f`

slange.o: single/slange.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slange.o `test -f 'single/slange.f' || echo '$(srcdir)/'`single/slange.f

slange.obj: single/slange.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slange.obj `cygpath -w single/slange.f`

slanhs.o: single/slanhs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slanhs.o `test -f 'single/slanhs.f' || echo '$(srcdir)/'`single/slanhs.f

slanhs.obj: single/slanhs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slanhs.obj `cygpath -w single/slanhs.f`

slantr.o: single/slantr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slantr.o `test -f 'single/slantr.f' || echo '$(srcdir)/'`single/slantr.f

slantr.obj: single/slantr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slantr.obj `cygpath -w single/slantr.f`

slanv2.o: single/slanv2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slanv2.o `test -f 'single/slanv2.f' || echo '$(srcdir)/'`single/slanv2.f

slanv2.obj: single/slanv2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slanv2.obj `cygpath -w single/slanv2.f`

slapy2.o: single/slapy2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slapy2.o `test -f 'single/slapy2.f' || echo '$(srcdir)/'`single/slapy2.f

slapy2.obj: single/slapy2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slapy2.obj `cygpath -w single/slapy2.f`

slapy3.o: single/slapy3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slapy3.o `test -f 'single/slapy3.f' || echo '$(srcdir)/'`single/slapy3.f

slapy3.obj: single/slapy3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slapy3.obj `cygpath -w single/slapy3.f`

slaqge.o: single/slaqge.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaqge.o `test -f 'single/slaqge.f' || echo '$(srcdir)/'`single/slaqge.f

slaqge.obj: single/slaqge.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaqge.obj `cygpath -w single/slaqge.f`

slaqp2.o: single/slaqp2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaqp2.o `test -f 'single/slaqp2.f' || echo '$(srcdir)/'`single/slaqp2.f

slaqp2.obj: single/slaqp2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaqp2.obj `cygpath -w single/slaqp2.f`

slaqps.o: single/slaqps.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaqps.o `test -f 'single/slaqps.f' || echo '$(srcdir)/'`single/slaqps.f

slaqps.obj: single/slaqps.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaqps.obj `cygpath -w single/slaqps.f`

slaqtr.o: single/slaqtr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaqtr.o `test -f 'single/slaqtr.f' || echo '$(srcdir)/'`single/slaqtr.f

slaqtr.obj: single/slaqtr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaqtr.obj `cygpath -w single/slaqtr.f`

slarfb.o: single/slarfb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarfb.o `test -f 'single/slarfb.f' || echo '$(srcdir)/'`single/slarfb.f

slarfb.obj: single/slarfb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarfb.obj `cygpath -w single/slarfb.f`

slarf.o: single/slarf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarf.o `test -f 'single/slarf.f' || echo '$(srcdir)/'`single/slarf.f

slarf.obj: single/slarf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarf.obj `cygpath -w single/slarf.f`

slarfg.o: single/slarfg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarfg.o `test -f 'single/slarfg.f' || echo '$(srcdir)/'`single/slarfg.f

slarfg.obj: single/slarfg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarfg.obj `cygpath -w single/slarfg.f`

slarft.o: single/slarft.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarft.o `test -f 'single/slarft.f' || echo '$(srcdir)/'`single/slarft.f

slarft.obj: single/slarft.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarft.obj `cygpath -w single/slarft.f`

slarfx.o: single/slarfx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarfx.o `test -f 'single/slarfx.f' || echo '$(srcdir)/'`single/slarfx.f

slarfx.obj: single/slarfx.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarfx.obj `cygpath -w single/slarfx.f`

slartg.o: single/slartg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slartg.o `test -f 'single/slartg.f' || echo '$(srcdir)/'`single/slartg.f

slartg.obj: single/slartg.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slartg.obj `cygpath -w single/slartg.f`

slarzb.o: single/slarzb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarzb.o `test -f 'single/slarzb.f' || echo '$(srcdir)/'`single/slarzb.f

slarzb.obj: single/slarzb.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarzb.obj `cygpath -w single/slarzb.f`

slarz.o: single/slarz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarz.o `test -f 'single/slarz.f' || echo '$(srcdir)/'`single/slarz.f

slarz.obj: single/slarz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarz.obj `cygpath -w single/slarz.f`

slarzt.o: single/slarzt.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarzt.o `test -f 'single/slarzt.f' || echo '$(srcdir)/'`single/slarzt.f

slarzt.obj: single/slarzt.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slarzt.obj `cygpath -w single/slarzt.f`

slascl.o: single/slascl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slascl.o `test -f 'single/slascl.f' || echo '$(srcdir)/'`single/slascl.f

slascl.obj: single/slascl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slascl.obj `cygpath -w single/slascl.f`

slaset.o: single/slaset.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaset.o `test -f 'single/slaset.f' || echo '$(srcdir)/'`single/slaset.f

slaset.obj: single/slaset.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaset.obj `cygpath -w single/slaset.f`

slassq.o: single/slassq.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slassq.o `test -f 'single/slassq.f' || echo '$(srcdir)/'`single/slassq.f

slassq.obj: single/slassq.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slassq.obj `cygpath -w single/slassq.f`

slaswp.o: single/slaswp.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaswp.o `test -f 'single/slaswp.f' || echo '$(srcdir)/'`single/slaswp.f

slaswp.obj: single/slaswp.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slaswp.obj `cygpath -w single/slaswp.f`

slasy2.o: single/slasy2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slasy2.o `test -f 'single/slasy2.f' || echo '$(srcdir)/'`single/slasy2.f

slasy2.obj: single/slasy2.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slasy2.obj `cygpath -w single/slasy2.f`

slatrs.o: single/slatrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slatrs.o `test -f 'single/slatrs.f' || echo '$(srcdir)/'`single/slatrs.f

slatrs.obj: single/slatrs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slatrs.obj `cygpath -w single/slatrs.f`

slatrz.o: single/slatrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slatrz.o `test -f 'single/slatrz.f' || echo '$(srcdir)/'`single/slatrz.f

slatrz.obj: single/slatrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o slatrz.obj `cygpath -w single/slatrz.f`

sorg2r.o: single/sorg2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sorg2r.o `test -f 'single/sorg2r.f' || echo '$(srcdir)/'`single/sorg2r.f

sorg2r.obj: single/sorg2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sorg2r.obj `cygpath -w single/sorg2r.f`

sorghr.o: single/sorghr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sorghr.o `test -f 'single/sorghr.f' || echo '$(srcdir)/'`single/sorghr.f

sorghr.obj: single/sorghr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sorghr.obj `cygpath -w single/sorghr.f`

sorgqr.o: single/sorgqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sorgqr.o `test -f 'single/sorgqr.f' || echo '$(srcdir)/'`single/sorgqr.f

sorgqr.obj: single/sorgqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sorgqr.obj `cygpath -w single/sorgqr.f`

sorm2r.o: single/sorm2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sorm2r.o `test -f 'single/sorm2r.f' || echo '$(srcdir)/'`single/sorm2r.f

sorm2r.obj: single/sorm2r.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sorm2r.obj `cygpath -w single/sorm2r.f`

sormqr.o: single/sormqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sormqr.o `test -f 'single/sormqr.f' || echo '$(srcdir)/'`single/sormqr.f

sormqr.obj: single/sormqr.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sormqr.obj `cygpath -w single/sormqr.f`

sormr3.o: single/sormr3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sormr3.o `test -f 'single/sormr3.f' || echo '$(srcdir)/'`single/sormr3.f

sormr3.obj: single/sormr3.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sormr3.obj `cygpath -w single/sormr3.f`

sormrz.o: single/sormrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sormrz.o `test -f 'single/sormrz.f' || echo '$(srcdir)/'`single/sormrz.f

sormrz.obj: single/sormrz.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o sormrz.obj `cygpath -w single/sormrz.f`

srscl.o: single/srscl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o srscl.o `test -f 'single/srscl.f' || echo '$(srcdir)/'`single/srscl.f

srscl.obj: single/srscl.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o srscl.obj `cygpath -w single/srscl.f`

strevc.o: single/strevc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o strevc.o `test -f 'single/strevc.f' || echo '$(srcdir)/'`single/strevc.f

strevc.obj: single/strevc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o strevc.obj `cygpath -w single/strevc.f`

strexc.o: single/strexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o strexc.o `test -f 'single/strexc.f' || echo '$(srcdir)/'`single/strexc.f

strexc.obj: single/strexc.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o strexc.obj `cygpath -w single/strexc.f`

strsna.o: single/strsna.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o strsna.o `test -f 'single/strsna.f' || echo '$(srcdir)/'`single/strsna.f

strsna.obj: single/strsna.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o strsna.obj `cygpath -w single/strsna.f`

stzrzf.o: single/stzrzf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o stzrzf.o `test -f 'single/stzrzf.f' || echo '$(srcdir)/'`single/stzrzf.f

stzrzf.obj: single/stzrzf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o stzrzf.obj `cygpath -w single/stzrzf.f`

icmax1.o: util/icmax1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o icmax1.o `test -f 'util/icmax1.f' || echo '$(srcdir)/'`util/icmax1.f

icmax1.obj: util/icmax1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o icmax1.obj `cygpath -w util/icmax1.f`

ieeeck.o: util/ieeeck.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ieeeck.o `test -f 'util/ieeeck.f' || echo '$(srcdir)/'`util/ieeeck.f

ieeeck.obj: util/ieeeck.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ieeeck.obj `cygpath -w util/ieeeck.f`

ilaenv.o: util/ilaenv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ilaenv.o `test -f 'util/ilaenv.f' || echo '$(srcdir)/'`util/ilaenv.f

ilaenv.obj: util/ilaenv.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o ilaenv.obj `cygpath -w util/ilaenv.f`

izmax1.o: util/izmax1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o izmax1.o `test -f 'util/izmax1.f' || echo '$(srcdir)/'`util/izmax1.f

izmax1.obj: util/izmax1.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o izmax1.obj `cygpath -w util/izmax1.f`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic tags \
	uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
