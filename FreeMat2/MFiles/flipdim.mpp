//!
//@Module FLIPDIM Reverse a Matrix Along a Given Dimension
//@@Section ARRAY
//@@USAGE
//Reverses an array along the given dimension.  The syntax for its use is
//@[
//   y = flipdim(x,n)
//@]
//where @|x| is matrix, and @|n| is the dimension to reverse.
//@@Example
//The following examples show some uses of @|flipdim| on N-dimensional
//arrays.
//@<
//x = int32(rand(4,5,3)*10)
//flipdim(x,1)
//flipdim(x,2)
//flipdim(x,3)
//@>
//!
% Copyright (c) 2005 Samit Basu
%
% Permission is hereby granted, free of charge, to any person obtaining a 
% copy of this software and associated documentation files (the "Software"), 
% to deal in the Software without restriction, including without limitation 
% the rights to use, copy, modify, merge, publish, distribute, sublicense, 
% and/or sell copies of the Software, and to permit persons to whom the 
% Software is furnished to do so, subject to the following conditions:
%
% The above copyright notice and this permission notice shall be included 
% in all copies or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
% OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
% THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
% FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
% DEALINGS IN THE SOFTWARE.
function x = flipdim(y,n)
  szey = size(y);
  ndim = prod(size(szey));
  n = int32(n);
  if (n<1 || n>ndim), x = y; return; end
  d = {};
  for k=1:ndim
    if (k==n)
      d{k} = szey(k):-1:1;
    else
      d{k} = 1:szey(k);
    end
  end
  x = y(d{:});
