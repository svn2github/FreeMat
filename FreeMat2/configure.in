dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/x11/main.cpp)

dnl sets build, host, target variables and the same with _alias
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(FreeMat, 1.05)

dnl Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_F77
AM_PROG_LEX
AC_PROG_YACC
AC_PROG_RANLIB

dnl **** Configure Options ****

AC_ARG_WITH(builtin-png,
	[AC_HELP_STRING([--with-builtin-png],
		[Force use of built-in PNG library [default=no]])],
		builtinpng="yes",
		builtinpng="no")

AC_ARG_WITH(builtin-tiff,
	[AC_HELP_STRING([--with-builtin-tiff],
		[Force use of built-in TIFF library [default=no]])],
		builtintiff="yes",
		builtintiff="no")

AC_ARG_WITH(builtin-jpg,
	[AC_HELP_STRING([--with-builtin-jpg],
		[Force use of built-in JPEG library [default=no]])],
		builtinjpg="yes",
		builtinjpg="no")

AC_ARG_WITH(miniblas,
	[AC_HELP_STRING([--with-miniblas],
		[Force use of built-in BLAS library [default=no]])],
		forceminiblas="yes",
		forceminiblas="no")

AC_ARG_WITH(mpi,
	[AC_HELP_STRING([--with-mpi],
	        [Build the MPI executables [default=no]])],
		usempi="yes",
		usempi="no")

AC_C_BIGENDIAN(AC_DEFINE([WORDS_BIGENDIAN]),[],AC_MSG_ERROR([cannot determine if system is big endian or little endian... what kind of system is this??]))

dnl **** Check for X11 ****

AC_PATH_XTRA
if test "$no_x" = "yes" ; then
   AC_MSG_ERROR([cannot build X11 programs - try installing X11 and/or the X11-development package, and make sure you do not specify '--without-x' as a configuration option]);
fi

dnl **** Check for BLAS ****

if test "$forceminiblas" != "yes" ; then
   ACX_BLAS([], forceminiblas=yes)
fi

if test "$forceminiblas" = "yes" ; then
  BLAS_LIBS="-L\${top_builddir}/libs/libMiniBLAS -lMiniBLAS"
  miniblasdir="libMiniBLAS"
  AC_MSG_WARN([using included (reference implementation) BLAS - this may result in poor matrix algebra performance - consider installing ATLAS (http://math-atlas.sourceforge.net) and then rebuilding])
fi

AM_CONDITIONAL([NEED_BLAS], [test "$forceminiblas" = yes])

dnl **** Check for curses ****

MP_WITH_CURSES

if test ! "$CURSES_LIB"; then
   AC_MSG_ERROR([could not find curses or ncurses libraries - one of these must be available for FreeMat to be built])
fi

dnl **** Check for MPI ****

AC_LANG_CPLUSPLUS
if test "$usempi" = "yes"; then
  ACX_MPI( ,usempi="no")
fi

if test "$usempi" = "yes" ; then
  CXX="$MPICXX"
  AC_DEFINE([USE_MPI])
fi

dnl **** Check for PNG ****

if test "$builtinpng" != "yes" ; then
   AC_CHECK_LIB(png, png_check_sig, LIBS="-lpng -lz -lm $LIBS", builtinpng=yes , [-lz -lm])
fi

AM_CONDITIONAL([NEED_PNG], [test "$builtinpng" = "yes"])

dnl **** Check for TIFF ****

if test "$builtintiff" != "yes" ; then
   AC_CHECK_LIB(tiff, TIFFError, LIBS="-ltiff -lm $LIBS", builtintiff=yes , [-lm])
fi

if test "$builtintiff" = "yes" ; then
   AC_CONFIG_SUBDIRS(libs/libtiff361)
fi

AM_CONDITIONAL([NEED_TIFF], [test "$builtintiff" = "yes"])

dnl **** Check for JPEG ****

if test "$builtinjpg" != "yes" ; then
   AC_CHECK_LIB(jpeg, jpeg_read_header, LIBS="-ljpeg $LIBS", builtinjpg=yes)
fi

if test "$builtinjpg" = "yes" ; then
   AC_CONFIG_SUBDIRS(libs/libjpeg6b)
fi

AM_CONDITIONAL([NEED_JPEG], [test "$builtinjpg" = "yes"])

dnl **** Configure libffi ****

AC_CONFIG_SUBDIRS(libs/libffi)



case $host in
*-*-linux-* | *-*-cygwin*)
  FLIBS=`echo $FLIBS | sed -e 's/-lfrtbegin//g'` ;;
esac

case $host in
*-*-darwin*)
  LDFLAGS="$LDFLAGS -L/sw/lib";
  CXXFLAGS="$CXXFLAGS -I/sw/include";
  FLIBS="-lg2c";;
esac

case $host in
*-*-cygwin*)
  CURSES_LIB=""
esac

dnl **** Dink with some of the flags ****
YFLAGS="$YFLAGS -d"
AC_SUBST(YFLAGS)


LAPACK_LIBS="-L\${top_builddir}/libs/libMiniLAPACK -lMiniLAPACK"


LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS $CURSES_LIB $MPILIBS"


AC_OUTPUT(Makefile src/Makefile src/x11/Makefile doc/Doxyfile libs/Makefile libs/libFFTPack/Makefile libs/libFreeMat/Makefile libs/libCore/Makefile libs/libGraphics/Makefile libs/libXP/Makefile help/Makefile help/mdc/Makefile help/html/Makefile MFiles/Makefile src/win32/Makefile libs/libf2c/Makefile libs/libz/Makefile libs/lpng125/Makefile libs/libMiniLAPACK/Makefile libs/libMiniBLAS/Makefile src/mac/Makefile src/mac/MainMenu.nib/Makefile)

echo \
"------------------------------------------------------------------------
Configuration:

  Source code location:       ${srcdir}
  Main location:              ${maindir}
  C Compiler:	              ${CC}
  C Compiler flags:           ${CFLAGS}
  C++ Compiler:		      ${CXX}
  C++ Compiler flags:         ${CXXFLAGS}
  Host System Type:           ${host}
  Install path:		      ${prefix}
  Libs:			      ${LIBS}
  Force Mini-BLAS:	      ${forceminiblas}
  Build MPI:		      ${usempi}

------------------------------------------------------------------------"

