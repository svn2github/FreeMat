LS/DIR List Files Function

USAGE

Lists the files in a directory or directories.  The general syntax for its use is

  ls('dirname1','dirname2',...,'dirnameN')

but this can also be expressed as

  ls 'dirname1' 'dirname2' ... 'dirnameN'

or 

  ls dirname1 dirname2 ... dirnameN

For compatibility with some environments, the function dir can also be used instead of ls.  Generally speaking, dirname is any string that would be accepted by the underlying OS as a valid directory name.  For example, on most systems, '.' refers to the current directory, and '..' refers to the parent directory.  Also, depending on the OS, it may be necessary to ``escape'' the directory seperators.  In particular, if directories are seperated with the backwards-slash character '\\', then the path specification must use double-slashes '\\\\'. Two points worth mentioning about the ls function:

  
* To get file-name completion to work at this time, you must use one of the first two forms of the command.
  
* If you want to capture the output of the ls command, use the system function instead.



EXAMPLE

First, we use the simplest form of the ls command, in which the directory name argument is given unquoted.

$
--> ls a*.m
addtest.m  addtest2.m addtest3.m 
$

Next, we use the ``traditional'' form of the function call, using both the parenthesis and the quoted string.

$
--> ls('a*.m')
addtest.m  addtest2.m addtest3.m 
$

In the third version, we use only the quoted string argument without parenthesis.  

$
--> ls 'a*.m'
addtest.m  addtest2.m addtest3.m 
$

  