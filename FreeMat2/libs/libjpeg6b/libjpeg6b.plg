<html>
<body>
<pre>
<h1>Build Log</h1>
<h3>
--------------------Configuration: libjpeg6b - Win32 Debug--------------------
</h3>
<h3>Command Lines</h3>
Creating temporary file "C:\DOCUME~1\basu\LOCALS~1\Temp\RSP1E3.tmp" with contents
[
/nologo /MLd /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "HAVE_BOOLEAN" /Fp"Debug/libjpeg6b.pch" /YX /Fo"Debug/" /Fd"Debug/" /FD /GZ /c 
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\cdjpeg.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\ansi2knr.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcapimin.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcapistd.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jccoefct.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jccolor.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcdctmgr.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcinit.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmainct.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmaster.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcomapi.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcparam.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcprepct.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcsample.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jctrans.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapimin.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapistd.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdatadst.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdatasrc.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcoefct.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcolor.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jddctmgr.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdinput.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmainct.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmaster.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmerge.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdpostct.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdsample.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdtrans.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jerror.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jfdctflt.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jfdctfst.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jfdctint.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jidctflt.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jidctfst.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jidctint.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jidctred.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jmemmgr.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jmemnobs.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegtran.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jquant1.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jquant2.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jutils.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\rdbmp.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\rdcolmap.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\rdgif.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\rdppm.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\rdrle.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\rdswitch.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\rdtarga.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\transupp.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\wrbmp.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\wrgif.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\wrppm.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\wrrle.c"
"C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\wrtarga.c"
]
Creating command line "xicl6.exe @C:\DOCUME~1\basu\LOCALS~1\Temp\RSP1E3.tmp" 
Creating temporary file "C:\DOCUME~1\basu\LOCALS~1\Temp\RSP1E4.tmp" with contents
[
/nologo /out:"Debug\libjpeg6b.lib" 
.\Debug\cdjpeg.obj
.\Debug\ansi2knr.obj
.\Debug\jcapimin.obj
.\Debug\jcapistd.obj
.\Debug\jccoefct.obj
.\Debug\jccolor.obj
.\Debug\jcdctmgr.obj
.\Debug\jchuff.obj
.\Debug\jcinit.obj
.\Debug\jcmainct.obj
.\Debug\jcmarker.obj
.\Debug\jcmaster.obj
.\Debug\jcomapi.obj
.\Debug\jcparam.obj
.\Debug\jcphuff.obj
.\Debug\jcprepct.obj
.\Debug\jcsample.obj
.\Debug\jctrans.obj
.\Debug\jdapimin.obj
.\Debug\jdapistd.obj
.\Debug\jdatadst.obj
.\Debug\jdatasrc.obj
.\Debug\jdcoefct.obj
.\Debug\jdcolor.obj
.\Debug\jddctmgr.obj
.\Debug\jdhuff.obj
.\Debug\jdinput.obj
.\Debug\jdmainct.obj
.\Debug\jdmarker.obj
.\Debug\jdmaster.obj
.\Debug\jdmerge.obj
.\Debug\jdphuff.obj
.\Debug\jdpostct.obj
.\Debug\jdsample.obj
.\Debug\jdtrans.obj
.\Debug\jerror.obj
.\Debug\jfdctflt.obj
.\Debug\jfdctfst.obj
.\Debug\jfdctint.obj
.\Debug\jidctflt.obj
.\Debug\jidctfst.obj
.\Debug\jidctint.obj
.\Debug\jidctred.obj
.\Debug\jmemmgr.obj
.\Debug\jmemnobs.obj
.\Debug\jpegtran.obj
.\Debug\jquant1.obj
.\Debug\jquant2.obj
.\Debug\jutils.obj
.\Debug\rdbmp.obj
.\Debug\rdcolmap.obj
.\Debug\rdgif.obj
.\Debug\rdppm.obj
.\Debug\rdrle.obj
.\Debug\rdswitch.obj
.\Debug\rdtarga.obj
.\Debug\transupp.obj
.\Debug\wrbmp.obj
.\Debug\wrgif.obj
.\Debug\wrppm.obj
.\Debug\wrrle.obj
.\Debug\wrtarga.obj
]
Creating command line "xilink6.exe -lib @C:\DOCUME~1\basu\LOCALS~1\Temp\RSP1E4.tmp"
<h3>Output Window</h3>
Compiling...
cdjpeg.c
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\cdjpeg.h(133): error: function returning function is not allowed
  EXTERN(boolean) read_quant_tables JPP((j_compress_ptr cinfo, char * filename,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\cdjpeg.h(135): error: function returning function is not allowed
  EXTERN(boolean) read_scan_script JPP((j_compress_ptr cinfo, char * filename));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\cdjpeg.h(136): error: function returning function is not allowed
  EXTERN(boolean) set_quant_slots JPP((j_compress_ptr cinfo, char *arg));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\cdjpeg.h(137): error: function returning function is not allowed
  EXTERN(boolean) set_sample_factors JPP((j_compress_ptr cinfo, char *arg));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\cdjpeg.h(149): error: function returning function is not allowed
  EXTERN(boolean) keymatch JPP((char * arg, const char * keyword, int minchars));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\cdjpeg.c(122): error: function returning function is not allowed
  keymatch (char * arg, const char * keyword, int minchars)
  ^

ansi2knr.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\cdjpeg.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\ansi2knr.c(346): warning #266: function declared implicitly
     exit(1);
     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\ansi2knr.c(353): warning #266: function declared implicitly
    exit(0);
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\ansi2knr.c(367): warning #266: function declared implicitly
    exit(1);
    ^

jcapimin.c
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

jcapistd.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcapimin.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

jccoefct.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcapistd.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jccoefct.c(61): error: function returning function is not allowed
  METHODDEF(boolean) compress_data
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jccoefct.c(64): error: function returning function is not allowed
  METHODDEF(boolean) compress_first_pass
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jccoefct.c(66): error: function returning function is not allowed
  METHODDEF(boolean) compress_output
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jccoefct.c(143): error: function returning function is not allowed
  compress_data (j_compress_ptr cinfo, JSAMPIMAGE input_buf)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jccoefct.c(245): error: function returning function is not allowed
  compress_first_pass (j_compress_ptr cinfo, JSAMPIMAGE input_buf)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jccoefct.c(341): error: function returning function is not allowed
  compress_output (j_compress_ptr cinfo, JSAMPIMAGE input_buf)
  ^

jccolor.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jccoefct.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

jcdctmgr.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jccolor.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

jchuff.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcdctmgr.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(89): error: function returning function is not allowed
  METHODDEF(boolean) encode_mcu_huff JPP((j_compress_ptr cinfo,
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(93): error: function returning function is not allowed
  METHODDEF(boolean) encode_mcu_gather JPP((j_compress_ptr cinfo,
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(152): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
        jpeg_make_c_derived_tbl(cinfo, TRUE, dctbl,
                                       ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(152): warning #152: conversion of nonzero integer to pointer
        jpeg_make_c_derived_tbl(cinfo, TRUE, dctbl,
                                       ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(278): error: function returning function is not allowed
  dump_buffer (working_state * state)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(302): error: function returning function is not allowed
  emit_bits (working_state * state, unsigned int code, int size)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(340): error: function returning function is not allowed
  flush_bits (working_state * state)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(353): error: function returning function is not allowed
  encode_one_block (working_state * state, JCOEFPTR block, int last_dc_val,
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(451): error: function returning function is not allowed
  emit_restart (working_state * state, int restart_num)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(476): error: function returning function is not allowed
  encode_mcu_huff (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(645): error: function returning function is not allowed
  encode_mcu_gather (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(852): error: array of functions is not allowed
    boolean did_dc[NUM_HUFF_TBLS];
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c(853): error: array of functions is not allowed
    boolean did_ac[NUM_HUFF_TBLS];
            ^

jcinit.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jchuff.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcinit.c(59): error: cast to type "boolean" is not allowed
    (boolean) (cinfo->num_scans > 1 || cinfo->optimize_coding));
     ^

jcmainct.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcinit.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmainct.c(33): error: a function type is not allowed here
    boolean suspended;  /* remember if we suspended output */
            ^

jcmarker.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmainct.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(515): error: expression must be a modifiable lvalue
      is_baseline = FALSE;
      ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(517): error: expression must be a modifiable lvalue
      is_baseline = TRUE;
      ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(521): error: expression must be a modifiable lvalue
   is_baseline = FALSE;
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(524): error: expression must be a modifiable lvalue
        is_baseline = FALSE;
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(536): warning #279: controlling expression is constant
      else if (is_baseline)
               ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(575): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
     emit_dht(cinfo, compptr->ac_tbl_no, TRUE);
                                         ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(575): warning #152: conversion of nonzero integer to pointer
     emit_dht(cinfo, compptr->ac_tbl_no, TRUE);
                                         ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(580): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
   emit_dht(cinfo, compptr->ac_tbl_no, TRUE);
                                       ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(580): warning #152: conversion of nonzero integer to pointer
   emit_dht(cinfo, compptr->ac_tbl_no, TRUE);
                                       ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(632): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
   emit_dht(cinfo, i, TRUE);
                      ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c(632): warning #152: conversion of nonzero integer to pointer
   emit_dht(cinfo, i, TRUE);
                      ^

jcmaster.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmarker.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmaster.c(138): error: array of functions is not allowed
    boolean component_sent[MAX_COMPONENTS];
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmaster.c(437): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
        (*cinfo->entropy->start_pass) (cinfo, TRUE);
                                              ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmaster.c(437): warning #152: conversion of nonzero integer to pointer
        (*cinfo->entropy->start_pass) (cinfo, TRUE);
                                              ^

jcomapi.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcmaster.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

jcparam.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcomapi.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcparam.c(289): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
    jpeg_set_quality(cinfo, 75, TRUE);
                                ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcparam.c(289): warning #152: conversion of nonzero integer to pointer
    jpeg_set_quality(cinfo, 75, TRUE);
                                ^

jcphuff.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcparam.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(28): error: a function type is not allowed here
    boolean gather_statistics;
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(89): error: function returning function is not allowed
  METHODDEF(boolean) encode_mcu_DC_first JPP((j_compress_ptr cinfo,
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(91): error: function returning function is not allowed
  METHODDEF(boolean) encode_mcu_AC_first JPP((j_compress_ptr cinfo,
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(93): error: function returning function is not allowed
  METHODDEF(boolean) encode_mcu_DC_refine JPP((j_compress_ptr cinfo,
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(95): error: function returning function is not allowed
  METHODDEF(boolean) encode_mcu_AC_refine JPP((j_compress_ptr cinfo,
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(116): error: expression must be a modifiable lvalue
    is_DC_band = (cinfo->Ss == 0);
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(122): warning #279: controlling expression is constant
      if (is_DC_band)
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(127): warning #279: controlling expression is constant
      if (is_DC_band)
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(151): warning #279: controlling expression is constant
      if (is_DC_band) {
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(377): error: function returning function is not allowed
  encode_mcu_DC_first (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(464): error: function returning function is not allowed
  encode_mcu_AC_first (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(571): error: function returning function is not allowed
  encode_mcu_DC_refine (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(618): error: function returning function is not allowed
  encode_mcu_AC_refine (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(774): error: array of functions is not allowed
    boolean did[NUM_HUFF_TBLS];
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(779): error: expression must be a modifiable lvalue
    is_DC_band = (cinfo->Ss == 0);
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(788): warning #279: controlling expression is constant
      if (is_DC_band) {
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c(796): warning #279: controlling expression is constant
        if (is_DC_band)
            ^

jcprepct.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcphuff.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

jcsample.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcprepct.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcsample.c(469): error: function "smoothok" may not be initialized
    boolean smoothok = TRUE;
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcsample.c(496): error: expression must be a modifiable lvalue
        smoothok = FALSE;
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcsample.c(509): error: expression must be a modifiable lvalue
        smoothok = FALSE;
        ^

jctrans.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jcsample.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jctrans.c(166): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
    jinit_c_master_control(cinfo, TRUE /* transcode only */);
                                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jctrans.c(166): warning #152: conversion of nonzero integer to pointer
    jinit_c_master_control(cinfo, TRUE /* transcode only */);
                                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jctrans.c(278): error: function returning function is not allowed
  compress_output (j_compress_ptr cinfo, JSAMPIMAGE input_buf)
  ^

jdapimin.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jctrans.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapimin.c(334): error: function returning function is not allowed
  jpeg_input_complete (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapimin.c(349): error: function returning function is not allowed
  jpeg_has_multiple_scans (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapimin.c(369): error: function returning function is not allowed
  jpeg_finish_decompress (j_decompress_ptr cinfo)
  ^

jdapistd.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapimin.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapistd.c(23): error: function returning function is not allowed
  LOCAL(boolean) output_pass_setup JPP((j_decompress_ptr cinfo));
                 ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapistd.c(38): error: function returning function is not allowed
  jpeg_start_decompress (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapistd.c(95): error: function returning function is not allowed
  output_pass_setup (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapistd.c(228): error: function returning function is not allowed
  jpeg_start_output (j_decompress_ptr cinfo, int scan_number)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapistd.c(253): error: function returning function is not allowed
  jpeg_finish_output (j_decompress_ptr cinfo)
  ^

jdatadst.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdapistd.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdatadst.c(81): error: function returning function is not allowed
  empty_output_buffer (j_compress_ptr cinfo)
  ^

jdatasrc.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdatadst.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdatasrc.c(30): error: a function type is not allowed here
    boolean start_of_file; /* have we gotten any data yet? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdatasrc.c(90): error: function returning function is not allowed
  fill_input_buffer (j_decompress_ptr cinfo)
  ^

jdcoefct.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdatasrc.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcoefct.c(72): error: function returning function is not allowed
  LOCAL(boolean) smoothing_ok JPP((j_decompress_ptr cinfo));
                 ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcoefct.c(405): error: function returning function is not allowed
  smoothing_ok (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcoefct.c(408): error: function "smoothing_useful" may not be initialized
    boolean smoothing_useful = FALSE;
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcoefct.c(447): error: expression must be a modifiable lvalue
   smoothing_useful = TRUE;
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcoefct.c(508): error: expression must be a modifiable lvalue
        last_row = FALSE;
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcoefct.c(514): error: expression must be a modifiable lvalue
        last_row = TRUE;
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcoefct.c(524): error: expression must be a modifiable lvalue
        first_row = FALSE;
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcoefct.c(529): error: expression must be a modifiable lvalue
        first_row = TRUE;
        ^

jdcolor.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcoefct.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

jddctmgr.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdcolor.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

jdhuff.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jddctmgr.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.h(154): error: function returning function is not allowed
  EXTERN(boolean) jpeg_fill_bit_buffer
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.c(74): error: array of functions is not allowed
    boolean dc_needed[D_MAX_BLOCKS_IN_MCU];
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.c(75): error: array of functions is not allowed
    boolean ac_needed[D_MAX_BLOCKS_IN_MCU];
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.c(106): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
      jpeg_make_d_derived_tbl(cinfo, TRUE, dctbl,
                                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.c(106): warning #152: conversion of nonzero integer to pointer
      jpeg_make_d_derived_tbl(cinfo, TRUE, dctbl,
                                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.c(292): error: function returning function is not allowed
  jpeg_fill_bit_buffer (bitread_working_state * state,
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.c(468): error: function returning function is not allowed
  process_restart (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.c(517): error: function returning function is not allowed
  decode_mcu (j_decompress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

jdinput.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdinput.c(24): error: a function type is not allowed here
    boolean inheaders;  /* TRUE until first SOS is reached */
            ^

jdmainct.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdinput.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmainct.c(120): error: a function type is not allowed here
    boolean buffer_full;  /* Have we gotten an iMCU row from decoder? */
            ^

jdmarker.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmainct.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(94): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method process_COM;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(95): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method process_APPn[16];
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(197): error: function returning function is not allowed
  get_soi (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(237): error: function returning function is not allowed
  get_sof (j_decompress_ptr cinfo, boolean is_prog, boolean is_arith)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(301): error: function returning function is not allowed
  get_sos (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(419): error: function returning function is not allowed
  get_dht (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(490): error: function returning function is not allowed
  get_dqt (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(548): error: function returning function is not allowed
  get_dri (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(691): error: function returning function is not allowed
  get_interesting_appn (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(739): error: function returning function is not allowed
  save_marker (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(845): error: function returning function is not allowed
  skip_variable (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(874): error: function returning function is not allowed
  next_marker (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(921): error: function returning function is not allowed
  first_marker (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(984): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
        if (! get_sof(cinfo, TRUE, FALSE))
                             ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(984): warning #152: conversion of nonzero integer to pointer
        if (! get_sof(cinfo, TRUE, FALSE))
                             ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(989): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
        if (! get_sof(cinfo, FALSE, TRUE))
                                    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(989): warning #152: conversion of nonzero integer to pointer
        if (! get_sof(cinfo, FALSE, TRUE))
                                    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(994): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
        if (! get_sof(cinfo, TRUE, TRUE))
                             ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(994): warning #152: conversion of nonzero integer to pointer
        if (! get_sof(cinfo, TRUE, TRUE))
                             ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(994): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
        if (! get_sof(cinfo, TRUE, TRUE))
                                   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(994): warning #152: conversion of nonzero integer to pointer
        if (! get_sof(cinfo, TRUE, TRUE))
                                   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(1113): error: function returning function is not allowed
  read_restart_marker (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(1192): error: function returning function is not allowed
  jpeg_resync_to_restart (j_decompress_ptr cinfo, int desired)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(1305): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method processor;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c(1350): error: identifier "jpeg_marker_parser_method" is undefined
        jpeg_marker_parser_method routine)
        ^

jdmaster.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmarker.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmaster.c(26): error: a function type is not allowed here
    boolean using_merged_upsample; /* TRUE if using merged upsample/cconvert */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmaster.c(44): error: function returning function is not allowed
  use_merged_upsample (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmaster.c(389): error: expression must be a modifiable lvalue
    use_c_buffer = cinfo->inputctl->has_multiple_scans || cinfo->buffered_image;
    ^

jdmerge.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmaster.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmerge.c(64): error: a function type is not allowed here
    boolean spare_full;  /* T if spare buffer is occupied */
            ^

jdphuff.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdmerge.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: function returning function is not allowed
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(975): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(979): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_decompress JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(987): error: function returning function is not allowed
  EXTERN(boolean) jpeg_has_multiple_scans JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(988): error: function returning function is not allowed
  EXTERN(boolean) jpeg_start_output JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(990): error: function returning function is not allowed
  EXTERN(boolean) jpeg_finish_output JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(991): error: function returning function is not allowed
  EXTERN(boolean) jpeg_input_complete JPP((j_decompress_ptr cinfo));
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1011): error: identifier "jpeg_marker_parser_method" is undefined
   JPP((j_decompress_ptr cinfo, int marker_code,
   ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(1037): error: function returning function is not allowed
  EXTERN(boolean) jpeg_resync_to_restart JPP((j_decompress_ptr cinfo,
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(51): error: a function type is not allowed here
    boolean call_pass_startup; /* True if pass_startup must be called */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(52): error: a function type is not allowed here
    boolean is_last_pass;  /* True during last pass */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(78): error: function returning function is not allowed
    JMETHOD(boolean, compress_data, (j_compress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(98): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(115): error: function returning function is not allowed
    JMETHOD(boolean, encode_mcu, (j_compress_ptr cinfo, JBLOCKROW *MCU_data));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(142): error: a function type is not allowed here
    boolean is_dummy_pass; /* True during 1st pass for 2-pass quant */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(153): error: a function type is not allowed here
    boolean has_multiple_scans; /* True if file has multiple scans */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(154): error: a function type is not allowed here
    boolean eoi_reached;  /* True when EOI has been consumed */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(197): error: identifier "jpeg_marker_parser_method" is undefined
    jpeg_marker_parser_method read_restart_marker;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(202): error: a function type is not allowed here
    boolean saw_SOI;  /* found SOI? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(203): error: a function type is not allowed here
    boolean saw_SOF;  /* found SOF? */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(211): error: function returning function is not allowed
    JMETHOD(boolean, decode_mcu, (j_decompress_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(216): error: a function type is not allowed here
    boolean insufficient_data; /* set TRUE after emitting warning */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpegint.h(242): error: a function type is not allowed here
    boolean need_context_rows; /* TRUE if need rows above & below */
            ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdhuff.h(154): error: function returning function is not allowed
  EXTERN(boolean) jpeg_fill_bit_buffer
                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(77): error: function returning function is not allowed
  METHODDEF(boolean) decode_mcu_DC_first JPP((j_decompress_ptr cinfo,
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(79): error: function returning function is not allowed
  METHODDEF(boolean) decode_mcu_AC_first JPP((j_decompress_ptr cinfo,
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(81): error: function returning function is not allowed
  METHODDEF(boolean) decode_mcu_DC_refine JPP((j_decompress_ptr cinfo,
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(83): error: function returning function is not allowed
  METHODDEF(boolean) decode_mcu_AC_refine JPP((j_decompress_ptr cinfo,
                     ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(100): error: expression must be a modifiable lvalue
    is_DC_band = (cinfo->Ss == 0);
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(103): error: expression must be a modifiable lvalue
    bad = FALSE;
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(104): warning #279: controlling expression is constant
    if (is_DC_band) {
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(106): error: expression must be a modifiable lvalue
        bad = TRUE;
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(110): error: expression must be a modifiable lvalue
        bad = TRUE;
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(113): error: expression must be a modifiable lvalue
        bad = TRUE;
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(118): error: expression must be a modifiable lvalue
        bad = TRUE;
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(121): error: expression must be a modifiable lvalue
      bad = TRUE;
      ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(128): warning #279: controlling expression is constant
    if (bad)
        ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(150): warning #279: controlling expression is constant
      if (is_DC_band)
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(155): warning #279: controlling expression is constant
      if (is_DC_band)
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(166): warning #279: controlling expression is constant
      if (is_DC_band) {
          ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(169): warning #167: argument of type "int" is incompatible with parameter of type "boolean *"
   jpeg_make_d_derived_tbl(cinfo, TRUE, tbl,
                                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(169): warning #152: conversion of nonzero integer to pointer
   jpeg_make_d_derived_tbl(cinfo, TRUE, tbl,
                                  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(228): error: function returning function is not allowed
  process_restart (j_decompress_ptr cinfo)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(286): error: function returning function is not allowed
  decode_mcu_DC_first (j_decompress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(357): error: function returning function is not allowed
  decode_mcu_AC_first (j_decompress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(442): error: function returning function is not allowed
  decode_mcu_DC_refine (j_decompress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c(491): error: function returning function is not allowed
  decode_mcu_AC_refine (j_decompress_ptr cinfo, JBLOCKROW *MCU_data)
  ^

jdpostct.c
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdphuff.c (code 2)
C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(94): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(110): error: identifier "boolean" is undefined
    boolean sent_table;  /* TRUE when table has been output */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(160): error: identifier "boolean" is undefined
    boolean component_needed; /* do we need the value of this component? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(254): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields common to both master struct types */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(269): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_decompress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(320): error: identifier "boolean" is undefined
    boolean raw_data_in;  /* TRUE=caller supplies downsampled data */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(321): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(322): error: identifier "boolean" is undefined
    boolean optimize_coding; /* TRUE=optimize entropy encoding parms */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(323): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(337): error: identifier "boolean" is undefined
    boolean write_JFIF_header; /* should a JFIF marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(347): error: identifier "boolean" is undefined
    boolean write_Adobe_marker; /* should an Adobe marker be written? */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(363): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if scan script uses progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(412): error: identifier "boolean" is undefined
    jpeg_common_fields;  /* Fields shared with jpeg_compress_struct */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(436): error: identifier "boolean" is undefined
    boolean buffered_image; /* TRUE=multiple output passes */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(437): error: identifier "boolean" is undefined
    boolean raw_data_out;  /* TRUE=downsampled data wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(440): error: identifier "boolean" is undefined
    boolean do_fancy_upsampling; /* TRUE=apply fancy upsampling */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(441): error: identifier "boolean" is undefined
    boolean do_block_smoothing; /* TRUE=apply interblock smoothing */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(443): error: identifier "boolean" is undefined
    boolean quantize_colors; /* TRUE=colormapped output wanted */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(446): error: identifier "boolean" is undefined
    boolean two_pass_quantize; /* TRUE=use two-pass color quantization */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(449): error: identifier "boolean" is undefined
    boolean enable_1pass_quant; /* enable future use of 1-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(450): error: identifier "boolean" is undefined
    boolean enable_external_quant;/* enable future use of external colormap */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(451): error: identifier "boolean" is undefined
    boolean enable_2pass_quant; /* enable future use of 2-pass quantizer */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(538): error: identifier "boolean" is undefined
    boolean progressive_mode; /* TRUE if SOFn specifies progressive mode */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(539): error: identifier "boolean" is undefined
    boolean arith_code;  /* TRUE=arithmetic coding, FALSE=Huffman */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(550): error: identifier "boolean" is undefined
    boolean saw_JFIF_marker; /* TRUE iff a JFIF APP0 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(557): error: identifier "boolean" is undefined
    boolean saw_Adobe_marker; /* TRUE iff an Adobe APP14 marker was found */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(560): error: identifier "boolean" is undefined
    boolean CCIR601_sampling; /* TRUE=first samples are cosited */
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(718): error: identifier "boolean" is undefined
    JMETHOD(boolean, empty_output_buffer, (j_compress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(730): error: identifier "boolean" is undefined
    JMETHOD(boolean, fill_input_buffer, (j_decompress_ptr cinfo));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(732): error: identifier "boolean" is undefined
    JMETHOD(boolean, resync_to_restart, (j_decompress_ptr cinfo, int desired));
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(768): error: identifier "boolean" is undefined
    JMETHOD(jvirt_sarray_ptr, request_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(774): error: identifier "boolean" is undefined
    JMETHOD(jvirt_barray_ptr, request_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(781): error: identifier "boolean" is undefined
    JMETHOD(JSAMPARRAY, access_virt_sarray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(786): error: identifier "boolean" is undefined
    JMETHOD(JBLOCKARRAY, access_virt_barray, (j_common_ptr cinfo,
    ^

C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jpeglib.h(809): error: expected a type specifier
  typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
compilation aborted for C:\FreeMatCVS\FreeMat2\libs\libjpeg6b\jdpostct.c (code -42)
xicl6.exe terminated at user request.

</pre>
</body>
</html>
