#!/bin/sh
# A tool to build a relocatable package file.  This is the distribution method
# of choice, and FreeMat currently assumes it is inside a structured package.
# The format for the package is:
#   BaseDir
#     |
#     Contents
#         |
#         Resources
#            |
#            help
#              |
#              html
#              text
#              pdf
#            |
#            mfiles
# On different platforms, additional subdirectories (e.g., bin on Linux/Win32, 
# MacOS on OS X, Frameworks on MacOS X, lib on Linux, etc..) are present.

MakeDir()
{
  echo "Making directory $1"
  test -d $1 || mkdir -p $1
}

CopyFile()
{
  echo "Copying file $1 to $2"
  cp $1 $2
}

CopyDirectory()
{
  echo "Copying directory $1 to $2"
  test -d $2 && rm -rf $2
  cp -R $1 $2
}


ImportLibs()
{
    libset=`LD_LIBRARY_PATH=$QTDIR/lib:$LD_LIBRARY_PATH  ldd $1 | awk '{print $3}'`
    for lib in $libset
      do
      isXlib=`expr match $lib ".*libX\|.*libSM\|.*libICE\|.*libGL\|.*linux"`
      if [ $isXlib == 0 ]
	  then
	  if [ -f $lib ]
	      then
	      CopyFile $lib $2
	  fi
      else
	  echo "Ignored $lib"
      fi
    done
}

MakeLinuxBundle()
{
    baseDir="$buildDir/FreeMat@VERSION@"
    MakeDir "$baseDir"
    MakeDir "$baseDir/Contents"
    MakeDir "$baseDir/Contents/bin"
    MakeDir "$baseDir/Contents/Resources"
    MakeDir "$baseDir/Contents/Resources/help"
    MakeDir "$baseDir/Contents/Resources/help/html"
    MakeDir "$baseDir/Contents/Resources/help/text"
    MakeDir "$baseDir/Contents/Resources/help/pdf"
    MakeDir "$baseDir/Contents/Resources/mfiles"
    MakeDir "$baseDir/Contents/Plugins/imageformats"
    CopyFile "$buildDir/src/FreeMat" "$baseDir/Contents/bin/FreeMatMain"
    MakeDir "$baseDir/Contents/lib"
    ImportLibs "$baseDir/Contents/bin/FreeMatMain" "$baseDir/Contents/lib"
    echo    "Making run script"
    cat > "$baseDir/Contents/bin/FreeMat" <<EOF
#!/bin/bash
mypath=\`which \$0\`
mypath=\${mypath%/*}
declare -x LD_LIBRARY_PATH=\$mypath/../lib
\$mypath/FreeMatMain \$*
EOF
    chmod +x "$baseDir/Contents/bin/FreeMat"
    CopyDirectory "$buildDir/help/html" "$baseDir/Contents/Resources/help/html"
    CopyDirectory "$buildDir/help/text" "$baseDir/Contents/Resources/help/text"
    CopyDirectory "$buildDir/help/MFiles" "$baseDir/Contents/Resources/mfiles"
    CopyFile "$buildDir/help/latex/main.pdf" "$baseDir/Contents/Resources/help/pdf"
    CopyFile "$QTDIR/plugins/imageformats/libqjpeg.so" "$baseDir/Contents/Plugins/imageformats/libqjpeg.so"
    CopyFile "$QTDIR/plugins/imageformats/libqmng.so" "$baseDir/Contents/Plugins/imageformats/libqmng.so"
    ImportLibs "$baseDir/Contents/Plugins/imageformats/libqjpeg.so" "$baseDir/Contents/lib"
    ImportLibs "$baseDir/Contents/Plugins/imageformats/libqmng.so" "$baseDir/Contents/lib"
}

Relink()
{
    echo "Relinking $1 --> $2"
    install_name_tool -change "$QTDIR/lib/$1.framework/Versions/4.0/$1" "@executable_path/../Frameworks/$1.framework/Versions/4.0/$1" "$2"
}

InstallFramework()
{
    echo "Installing framework $1"
    cp -R "$QTDIR/lib/$1.framework" "$baseDir/Contents/Frameworks/$1.framework"
    install_name_tool -id "@executable_path../Frameworks/$1.framework/Versions/4.0/$1" "$baseDir/Contents/Frameworks/$1.framework/Versions/4.0/$1"
    Relink $1 "$baseDir/Contents/MacOS/FreeMat"
}

MakeMacBundle()
{
    baseDir="$buildDir/FreeMat.app"
    MakeDir "$baseDir/Contents/Frameworks"
    InstallFramework "QtGui"
    InstallFramework "QtCore"
    InstallFramework "QtOpenGL"
#    CrossLinkFramework "QtGui" "QtCore"
#    CrossLinkFramework "QtOpenGL" "QtGui"
#    CrossLinkFramework "QtOpenGL" "QtCore"
    CopyDirectory "$buildDir/help/html" "$baseDir/Contents/Resources/help/html"
    CopyDirectory "$buildDir/help/text" "$baseDir/Contents/Resources/help/text"
    CopyDirectory "$buildDir/help/MFiles" "$baseDir/Contents/Resources/mfiles"
    CopyDirectory "$QTDIR/plugins/imageformats" "$baseDir/Contents/Plugins/imageformats"
#    RelinkPlugins
}

buildDir=$2
srcDir=$3
if test x"$1" == x"--linux"; then
    MakeLinuxBundle 
fi

if test x"$1" == x"--mac"; then
    MakeMacBundle 
fi
